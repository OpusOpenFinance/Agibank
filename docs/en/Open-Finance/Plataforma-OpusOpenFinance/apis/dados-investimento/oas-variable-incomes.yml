openapi: 3.0.0
info:
  title: API Variable Incomes - Integration Layer - OPUS Open Finance Brasil
  description: |
    Open Finance Brasil Variable Income Operations API - Phase 4.
    API that returns investment operation information of the Variable Income type held at transmitting institutions
    by their clients, including data such as product information, quantity, balances in the client's position,
    financial transactions and negotiation note details. It does not have segregation between natural and legal persons.
    The granularity of exposure to variable income operations is given by each asset (ticker) in the client's portfolio.
    Sharing considers standard and fractional lots, however, in Open Finance Brasil, the information is consolidated via the standard lot ticker.
    The lag in relation to the institution's electronic channel must be the closing (trading session) of the previous day (d-1).

    Regarding stock lending: at this moment, the scope of sharing does not include the client's lending portfolio/position (lent assets and transactions related to these assets).
    Only transactions for payment or receipt of interest arising from stock lending (or donated) contracts by clients should be shared.

    Regarding FIAGRO and FII products: when traded over the counter, they are outside the scope of Open Finance.

    For the investment identifier (investmentId), the following behavior must be adopted:

    - After 12 months without transactions and with the quantity of assets zeroed, the resourceId corresponding to the investmentId in question must change to UNAVAILABLE status;

    - In situations where the client purchases the asset again after a period of 12 months without transactions and with the quantity of assets zeroed,
    the same identifier (investmentId) must be used. Specifically for such products, the resource status in
    resources must change from UNAVAILABLE to AVAILABLE.

    Below is a table with the scope of products to be considered for sharing:
     ```
       |----------------------|-------------------------------|----------------------|-----------------------------------|
       | ASSET CLASS          | PRODUCT                       | SUBPRODUCT           | NAME                              |
       |----------------------|-------------------------------|----------------------|-----------------------------------|
       | Variable Income      | Investment Funds              |     -                | Listed FIAGRO                     |
       |----------------------|-------------------------------|----------------------|-----------------------------------|
       | Variable Income      | Stocks                        | Subscription         | Bonus / Rights / Receipt          |
       |----------------------|-------------------------------|----------------------|-----------------------------------|
       | Variable Income      | Investment Funds              | Real Estate Fund     | Listed FII                        |
       |----------------------|-------------------------------|----------------------|-----------------------------------|
       | Variable Income      | Stocks                        | Spot                 | Common / Preferred / Unit         |
       |----------------------|-------------------------------|----------------------|-----------------------------------|
       | Variable Income      | Index Funds                   | ETF                  | Variable Income ETF               |
       |----------------------|-------------------------------|----------------------|-----------------------------------|
       | Variable Income      | Index Funds                   | ETF                  | International ETF                 |
       |----------------------|-------------------------------|----------------------|-----------------------------------|
       | Variable Income      | Index Funds                   | Fixed Income ETF     | Fixed Income ETF                  |
       |----------------------|-------------------------------|----------------------|-----------------------------------|
       ```
  version: 2.0.0-base1.2.1
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0'
tags:
  - name: Product List
    description: Gets the list of Variable Income operations held by the client at the transmitting institution and for which they have given consent.
  - name: Product Identification
    description: Gets the data of the Variable Income operation identified by investmentId.
  - name: Balances
    description: Gets the position of the Variable Income operation identified by investmentId.
  - name: Transactions
    description: Gets the historical transactions (last 12 months) of the Variable Income operation identified by investmentId.
  - name: Transactions Current
    description: 'Gets the recent transactions of the Variable Income operation identified by investmentId. The period to be considered for presenting transactions will be up to 7 days - 7 days prior to the query, including the query day (D-6).'
  - name: Broker Note Details
    description: |
      Gets the information of the broker note identified in the purchase and sale transactions of assets on the stock exchange.
      The brokerNoteId is sent in the purchase or sale movements of assets and must be passed as an input parameter in the “Broker Note” endpoint. As content of the brokerNoteId field, it is expected that the transmitter will generate a unique, immutable identifier for each (natural) number of the broker note.
paths:
  /investments:
    post:
      tags:
        - Product List
      summary: Gets the list of Variable Income operations held by the client at the transmitting institution and for which they have given consent.
      operationId: variableIncomesGetInvestments
      description: Gets the list of Variable Income operations held by the client at the transmitting institution and for which they have given consent.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestWithConsentAndRequestMetaAndPagination'
      responses:
        '200':
          $ref: '#/components/responses/OKResponseVariableIncomesProductList'
        '400':
          $ref: '#/components/responses/BadRequestWithAdditionalProperties'
        '401':
          $ref: '#/components/responses/UnauthorizedWithAdditionalProperties'
        '403':
          $ref: '#/components/responses/ForbiddenWithAdditionalProperties'
        '404':
          $ref: '#/components/responses/NotFoundWithAdditionalProperties'
        '405':
          $ref: '#/components/responses/MethodNotAllowedWithAdditionalProperties'
        '406':
          $ref: '#/components/responses/NotAcceptableWithAdditionalProperties'
        '422':
          $ref: '#/components/responses/UnprocessableEntityWithAdditionalProperties'
        '423':
          $ref: '#/components/responses/LockedWithAdditionalProperties'
        '429':
          $ref: '#/components/responses/TooManyRequestsWithAdditionalProperties'
        '500':
          $ref: '#/components/responses/InternalServerErrorWithAdditionalProperties'
        '504':
          $ref: '#/components/responses/GatewayTimeoutWithAdditionalProperties'
        '529':
          $ref: '#/components/responses/SiteIsOverloadedWithAdditionalProperties'
        default:
          $ref: '#/components/responses/DefaultWithAdditionalProperties'
  /find:
    post:
      tags:
        - Product Identification
      summary: Gets the data of the Variable Income operation identified by investmentId.
      operationId: variableIncomesGetInvestmentsInvestmentId
      description: Gets the data of the Variable Income operation identified by investmentId.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestWithConsentAndRequestMetaAndInvestmentId'
      responses:
        '200':
          $ref: '#/components/responses/OKResponseVariableIncomesProductIdentification'
        '400':
          $ref: '#/components/responses/BadRequestWithAdditionalProperties'
        '401':
          $ref: '#/components/responses/UnauthorizedWithAdditionalProperties'
        '403':
          $ref: '#/components/responses/ForbiddenWithAdditionalProperties'
        '404':
          $ref: '#/components/responses/NotFoundWithAdditionalProperties'
        '405':
          $ref: '#/components/responses/MethodNotAllowedWithAdditionalProperties'
        '406':
          $ref: '#/components/responses/NotAcceptableWithAdditionalProperties'
        '422':
          $ref: '#/components/responses/UnprocessableEntityWithAdditionalProperties'
        '423':
          $ref: '#/components/responses/LockedWithAdditionalProperties'
        '429':
          $ref: '#/components/responses/TooManyRequestsWithAdditionalProperties'
        '500':
          $ref: '#/components/responses/InternalServerErrorWithAdditionalProperties'
        '504':
          $ref: '#/components/responses/GatewayTimeoutWithAdditionalProperties'
        '529':
          $ref: '#/components/responses/SiteIsOverloadedWithAdditionalProperties'
        default:
          $ref: '#/components/responses/DefaultWithAdditionalProperties'
  /balances:
    post:
      tags:
        - Balances
      summary: Gets the position of the Variable Income operation identified by investmentId.
      operationId: variableIncomesGetInvestmentsInvestmentIdBalances
      description: |
        Gets the position of the Variable Income operation identified by investmentId.

        In cases where there is no position for the investment, that is, quantity of assets and monetary values zeroed, but it is still within the exposure period (up to 12 months after the last transaction), status code 200 must be returned and for the return payload consider the values below. Non-mandatory fields should not be returned:

        - Monetary values: 0.00
        - Quantity of assets: 0.00
        - Date of last position: same content (date) as the requestDateTime field, except for the fraction corresponding to the time
        - Price factor: 0.00
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestWithConsentAndRequestMetaAndInvestmentId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseVariableIncomesBalances'
        '400':
          $ref: '#/components/responses/BadRequestWithAdditionalProperties'
        '401':
          $ref: '#/components/responses/UnauthorizedWithAdditionalProperties'
        '403':
          $ref: '#/components/responses/ForbiddenWithAdditionalProperties'
        '404':
          $ref: '#/components/responses/NotFoundWithAdditionalProperties'
        '405':
          $ref: '#/components/responses/MethodNotAllowedWithAdditionalProperties'
        '406':
          $ref: '#/components/responses/NotAcceptableWithAdditionalProperties'
        '422':
          $ref: '#/components/responses/UnprocessableEntityWithAdditionalProperties'
        '423':
          $ref: '#/components/responses/LockedWithAdditionalProperties'
        '429':
          $ref: '#/components/responses/TooManyRequestsWithAdditionalProperties'
        '500':
          $ref: '#/components/responses/InternalServerErrorWithAdditionalProperties'
        '504':
          $ref: '#/components/responses/GatewayTimeoutWithAdditionalProperties'
        '529':
          $ref: '#/components/responses/SiteIsOverloadedWithAdditionalProperties'
        default:
          $ref: '#/components/responses/DefaultWithAdditionalProperties'
  /transactions:
    post:
      tags:
        - Transactions
      summary: Gets the historical transactions (last 12 months) of the Variable Income operation identified by investmentId.
      operationId: variableIncomesGetInvestmentsInvestmentIdTransactions
      description: Gets the historical transactions (last 12 months) of the Variable Income operation identified by investmentId.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestTransactions'
      responses:
        '200':
          $ref: '#/components/responses/OKResponseVariableIncomesTransactions'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '423':
          $ref: '#/components/responses/Locked'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
        '529':
          $ref: '#/components/responses/SiteIsOverloaded'
        default:
          $ref: '#/components/responses/Default'
  /transactions-current:
    post:
      tags:
        - Transactions Current
      summary: 'Gets the recent transactions of the Variable Income operation identified by investmentId. The period to be considered for presenting transactions will be up to 7 days - 7 days prior to the query, including the query day (D-6).'
      operationId: variableIncomesGetInvestmentsInvestmentIdTransactionsCurrent
      description: 'Gets the recent transactions of the Variable Income operation identified by investmentId. The period to be considered for presenting transactions will be up to 7 days - 7 days prior to the query, including the query day (D-6).'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestTransactionsCurrent'
      responses:
        '200':
          $ref: '#/components/responses/OKResponseVariableIncomesTransactionsCurrent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '423':
          $ref: '#/components/responses/Locked'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
        '529':
          $ref: '#/components/responses/SiteIsOverloaded'
        default:
          $ref: '#/components/responses/Default'
  /broker-notes:
    post:
      tags:
        - Broker Note Details
      summary: |
        Gets the information of the broker note identified in the purchase and sale transactions of assets on the stock exchange.
        The brokerNoteId is sent in the purchase or sale movements of assets and must be passed as an input parameter in the “Broker Note” endpoint. As content of the brokerNoteId field, it is expected that the transmitter will generate a unique, immutable identifier for each (natural) number of the broker note.
      operationId: variableIncomesGetInvestmentsInvestmentIdBrokerNotesBrokerNoteId
      description: |
        Gets the information of the broker note identified in the purchase and sale transactions of assets on the stock exchange.
        The brokerNoteId is sent in the purchase or sale movements of assets and must be passed as an input parameter in the “Broker Note” endpoint. As content of the brokerNoteId field, it is expected that the transmitter will generate a unique, immutable identifier for each (natural) number of the broker note.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestWithConsentAndRequestMetaAndBrokerNoteId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseVariableIncomesBroker'
        '400':
          $ref: '#/components/responses/BadRequestWithAdditionalProperties'
        '401':
          $ref: '#/components/responses/UnauthorizedWithAdditionalProperties'
        '403':
          $ref: '#/components/responses/ForbiddenWithAdditionalProperties'
        '404':
          $ref: '#/components/responses/NotFoundWithAdditionalProperties'
        '405':
          $ref: '#/components/responses/MethodNotAllowedWithAdditionalProperties'
        '406':
          $ref: '#/components/responses/NotAcceptableWithAdditionalProperties'
        '422':
          $ref: '#/components/responses/UnprocessableEntityWithAdditionalProperties'
        '423':
          $ref: '#/components/responses/LockedWithAdditionalProperties'
        '429':
          $ref: '#/components/responses/TooManyRequestsWithAdditionalProperties'
        '500':
          $ref: '#/components/responses/InternalServerErrorWithAdditionalProperties'
        '504':
          $ref: '#/components/responses/GatewayTimeoutWithAdditionalProperties'
        '529':
          $ref: '#/components/responses/SiteIsOverloadedWithAdditionalProperties'
        default:
          $ref: '#/components/responses/DefaultWithAdditionalProperties'
components:
  schemas:
    ResponseVariableIncomesProductList:
      type: object
      required:
        - data
        - meta
      properties:
        data:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/ResponseVariableIncomesProductListData'
        meta:
          $ref: '#/components/schemas/VariableIncomesMeta'
      additionalProperties: false
    ResponseVariableIncomesProductIdentification:
      type: object
      required:
        - data
        - meta
      properties:
        data:
          $ref: '#/components/schemas/ResponseVariableIncomesProductIdentificationData'
        meta:
          $ref: '#/components/schemas/VariableIncomesMeta'
      additionalProperties: false
    ResponseVariableIncomesBalances:
      type: object
      required:
        - data
        - meta
      properties:
        data:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/ResponseVariableIncomesBalanceData'
        meta:
          $ref: '#/components/schemas/VariableIncomesMeta'
      additionalProperties: false
    ResponseVariableIncomesTransactions:
      type: object
      required:
        - data
        - meta
      properties:
        data:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/ResponseVariableIncomesTransactionsData'
        meta:
          $ref: '#/components/schemas/MetaSingleWithHasMoreRecords'
      additionalProperties: false
    ResponseVariableIncomesTransactionsCurrent:
      type: object
      required:
        - data
        - meta
      properties:
        data:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/ResponseVariableIncomesTransactionsCurrentData'
        meta:
          $ref: '#/components/schemas/MetaSingleWithHasMoreRecords'
      additionalProperties: false
    ResponseVariableIncomesProductListData:
      type: object
      description: List of variable income assets held by the client at the transmitting institution and for which they have given consent.
      required:
        - brandName
        - companyCnpj
        - investmentId
      properties:
        brandName:
          type: string
          description: 'Brand Name reported by the participant in Open Finance. It is recommended to use, whenever possible, the same brand name attributed in the Customer Friendly Server Name (Authorization Server) directory field.'
          pattern: '[\w\W\s]*'
          example: Organização A # Organization A
          maxLength: 80
        companyCnpj:
          type: string
          description: 'Full CNPJ number of the institution responsible for registration - CNPJ corresponds to the registration number in the National Registry of Legal Entities. Only the CNPJ numbers should be included, without mask.'
          maxLength: 14
          pattern: '^\d{14}$'
          example: '21281590001660'
        investmentId:
          $ref: '#/components/schemas/LegacyId'
      additionalProperties: false
    ResponseVariableIncomesProductIdentificationData:
      type: object
      required:
        - isinCode
        - ticker
      properties:
        issuerInstitutionCnpjNumber:
          type: string
          description: Issuer institution CNPJ. If the transmitter has the information, sending this field is mandatory.
          maxLength: 14
          pattern: '^\d{14}$'
          example: '11225860000140'
        isinCode:
          type: string
          description: |
            Emission ISIN Code, Product ISIN Code, Issuer Code: universal code that identifies each security or financial instrument, according to ISO 6166 Standard.
          maxLength: 12
          pattern: '^[A-Z]{2}([A-Z0-9]){9}\d{1}$'
          example: BRCST4CTF001
        ticker:
          type: string
          description: Trading code for identifying assets traded on the stock exchange.
          maxLength: 35
          pattern: '[\w\W\s]*'
          example: PETR4
      additionalProperties: false
    ResponseVariableIncomesBalanceData:
      type: object
      required:
        - referenceDate
        - priceFactor
        - grossAmount
        - blockedBalance
        - quantity
        - closingPrice
      properties:
        referenceDate:
          type: string
          format: date
          description: Closed position for the asset of the previous day's date.
          pattern: '^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])$'
          example: '2023-01-07'
          maxLength: 10
        priceFactor:
          type: string
          format: double
          description: |
            Factor that indicates the number of shares used to form the price. Value informed must be greater than zero.
          pattern: '^\d{1,15}\.\d{2,8}$'
          maxLength: 24
          example: '100.0005'
        grossAmount:
          $ref: '#/components/schemas/VariableIncomesBalancesGrossAmount'
        blockedBalance:
          $ref: '#/components/schemas/VariableIncomesBalancesBlockedBalance'
        quantity:
          type: string
          format: double
          description: Total quantity of the asset on the reference date.
          pattern: '^-?\d{1,15}\.\d{2,8}$'
          maxLength: 25
          example: '1000.00000004'
        closingPrice:
          $ref: '#/components/schemas/VariableIncomesBalancesClosingPrice'
    ResponseVariableIncomesTransactionsData:
      type: object
      required:
        - type
        - transactionType
        - transactionDate
        - transactionValue
        - transactionId
      properties:
        type:
          $ref: '#/components/schemas/EnumVariableIncomesTransactionsType'
        transactionType:
          $ref: '#/components/schemas/EnumVariableIncomesTransactionsTransactionType'
        transactionTypeAdditionalInfo:
          type: string
          description: |
            Additional information on the type of transaction, to be filled in in the case of transactions not delimited in the domain.

            [Restriction] Mandatory field for participants to fill in when the 'transactionType' field is filled in with the value 'OUTROS' (Others).
          maxLength: 100
          pattern: '[\w\W\s]*'
        transactionDate:
          type: string
          format: date
          description: |
            Transaction date.

            [Restriction] Trading session date: share transactions up to the position date.
          maxLength: 10
          minLength: 10
          pattern: '^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])$'
          example: '2018-02-15'
        priceFactor:
          type: string
          format: double
          description: |
            Factor that indicates the number of shares used to form the price. Value informed must be greater than zero.
          pattern: '^\d{1,15}\.\d{2,8}$'
          maxLength: 24
          example: '100.0005'
        transactionUnitPrice:
          type: object
          description: |
            Unit price of the transaction: unit value of the product in the investment transaction.

            [Restriction] Mandatory field for participants to fill in when the 'transactionType' field is filled in with the values 'COMPRA' (Purchase) or 'VENDA' (Sale).
          required:
            - amount
            - currency
          properties:
            amount:
              type: string
              format: double
              description: Value related to the object.
              maxLength: 21
              pattern: '^-?\d{1,15}\.\d{2,4}$'
              example: '1000.0004'
            currency:
              type: string
              description: 'Currency referring to the monetary value, following the ISO-4217 model.'
              pattern: '^[A-Z]{3}$'
              maxLength: 3
              example: BRL
        transactionQuantity:
          type: string
          format: double
          description: |
            Quantity of assets transacted.

            [Restriction] Mandatory field for participants to fill in when the 'transactionType' field is filled in with the values 'COMPRA' (Purchase) or 'VENDA' (Sale).
          maxLength: 24
          pattern: '^\d{1,15}\.\d{2,8}$'
          example: '42.00000025'
        transactionValue:
          type: object
          description: Value of the transaction performed by the client.
          required:
            - amount
            - currency
          properties:
            amount:
              type: string
              format: double
              description: Value related to the object.
              maxLength: 20
              pattern: '^\d{1,15}\.\d{2,4}$'
              example: '1000.04'
            currency:
              type: string
              description: 'Currency referring to the monetary value, following the ISO-4217 model.'
              pattern: '^[A-Z]{3}$'
              maxLength: 3
              example: BRL
        transactionId:
          $ref: '#/components/schemas/LegacyId'
        brokerNoteId:
          $ref: '#/components/schemas/LegacyId'
      additionalProperties: false
    ResponseVariableIncomesTransactionsCurrentData:
      type: object
      required:
        - type
        - transactionType
        - transactionDate
        - transactionValue
        - transactionId
      properties:
        type:
          $ref: '#/components/schemas/EnumVariableIncomesTransactionsCurrentType'
        transactionType:
          $ref: '#/components/schemas/EnumVariableIncomesTransactionsCurrentTransactionType'
        transactionTypeAdditionalInfo:
          type: string
          description: |
            Additional information on the type of transaction, to be filled in in the case of transactions not delimited in the domain.

            [Restriction] Mandatory field for participants to fill in when the 'transactionType' field is filled in with the value 'OUTROS' (Others).
          maxLength: 100
          pattern: '[\w\W\s]*'
        transactionDate:
          type: string
          format: date
          description: |
            Transaction date.

            [Restriction] Trading session date: share transactions up to the position date.
          maxLength: 10
          minLength: 10
          pattern: '^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])$'
          example: '2018-02-15'
        priceFactor:
          type: string
          format: double
          description: |
            Factor that indicates the number of shares used to form the price. Value informed must be greater than zero.
          pattern: '^\d{1,15}\.\d{2,8}$'
          maxLength: 24
          example: '100.0005'
        transactionUnitPrice:
          type: object
          description: |
            Unit price of the transaction: unit value of the product in the investment transaction.

            [Restriction] Mandatory field for participants to fill in when the 'transactionType' field is filled in with the values 'COMPRA' (Purchase) or 'VENDA' (Sale).
          required:
            - amount
            - currency
          properties:
            amount:
              type: string
              format: double
              description: Value related to the object.
              maxLength: 21
              pattern: '^-?\d{1,15}\.\d{2,4}$'
              example: '1000.0004'
            currency:
              type: string
              description: 'Currency referring to the monetary value, following the ISO-4217 model.'
              pattern: '^[A-Z]{3}$'
              maxLength: 3
              example: BRL
        transactionQuantity:
          type: string
          format: double
          description: |
            Quantity of assets transacted.

            [Restriction] Mandatory field for participants to fill in when the 'transactionType' field is filled in with the values 'COMPRA' (Purchase) or 'VENDA' (Sale).
          maxLength: 24
          pattern: '^\d{1,15}\.\d{2,8}$'
          example: '42.00000025'
        transactionValue:
          type: object
          description: Value of the transaction performed by the client.
          required:
            - amount
            - currency
          properties:
            amount:
              type: string
              format: double
              description: Value related to the object.
              maxLength: 20
              pattern: '^\d{1,15}\.\d{2,4}$'
              example: '1000.04'
            currency:
              type: string
              description: 'Currency referring to the monetary value, following the ISO-4217 model.'
              pattern: '^[A-Z]{3}$'
              maxLength: 3
              example: BRL
        transactionId:
          $ref: '#/components/schemas/LegacyId'
        brokerNoteId:
          $ref: '#/components/schemas/LegacyId'
      additionalProperties: false
    VariableIncomesBalancesBlockedBalance:
      type: object
      description: Value not available for transaction at that moment for any reason (judicial block, guarantee block, among others). Grace period is not considered as a block.
      required:
        - amount
        - currency
      properties:
        amount:
          type: string
          format: double
          description: Value related to the object.
          pattern: '^\d{1,15}\.\d{2,4}$'
          maxLength: 20
          example: '1000.04'
        currency:
          type: string
          description: 'Currency referring to the monetary value, following the ISO-4217 model.'
          pattern: '^[A-Z]{3}$'
          maxLength: 3
          example: BRL
    VariableIncomesBalancesClosingPrice:
      type: object
      description: Closing price of the reference date.
      required:
        - amount
        - currency
      properties:
        amount:
          type: string
          format: double
          description: Value related to the object.
          pattern: '^-?\d{1,15}\.\d{2,4}$'
          maxLength: 21
          example: '1000.0004'
        currency:
          type: string
          description: 'Currency referring to the monetary value, following the ISO-4217 model.'
          pattern: '^[A-Z]{3}$'
          maxLength: 3
          example: BRL
    VariableIncomesBalancesGrossAmount:
      type: object
      description: 'Investment value prior to the deduction of taxes, fees and charges (if any), updated on the reference date. Quantity of assets divided by the Quotation Factor and multiplied by the closing price of the reference date.'
      required:
        - amount
        - currency
      properties:
        amount:
          type: string
          format: double
          description: Value related to the object.
          pattern: '^-?\d{1,15}\.\d{2,4}$'
          maxLength: 21
          example: '1000.04'
        currency:
          type: string
          description: 'Currency referring to the monetary value, following the ISO-4217 model.'
          pattern: '^[A-Z]{3}$'
          maxLength: 3
          example: BRL
    VariableIncomesMeta:
      type: object
      description: Meta information regarding the requested API.
      required:
        - totalRecords
        - totalPages
        - requestDateTime
      properties:
        totalRecords:
          type: integer
          format: int32
          description: Total number of records in the result
          example: 1
        totalPages:
          type: integer
          format: int32
          description: Total number of pages in the result
          example: 1
        requestDateTime:
          description: 'Date and time of the query, according to RFC-3339 specification, UTC format.'
          type: string
          maxLength: 20
          format: date-time
          example: '2021-05-21T08:30:00Z'
      additionalProperties: false
    EnumVariableIncomesTransactionsType:
      type: string
      description: |
        Type of transaction in investment view: entry or exit. In cases of dividend, JCP and rent payments, it is agreed that the type of movement will be considered as exit.
      enum:
        - ENTRADA # Entry
        - SAIDA   # Exit
      example: SAIDA # Exit
    EnumVariableIncomesTransactionsTransactionType:
      type: string
      description: |
        The field must classify the transaction into one of the types described: purchase, sale, dividends, JCP, rents, custody transfer, ownership transfer and others.
        The transmitter must classify the available transactions by associating them with one of the items in the Enum listed in this field.
        The OTHER option should only be used for cases where the shared transaction cannot in fact be classified as one of the items in this Enum.
        The expression “rents” should only be used to report interest/remuneration paid/received by the client from stock lending contracts, following the same ENTRY/EXIT understanding of the expression “dividends”.
      enum:
        - COMPRA                 # Buy
        - VENDA                  # Sale
        - DIVIDENDOS             # Dividends
        - JCP                    # JCP (Juros sobre Capital Próprio - Interest on Equity)
        - ALUGUEIS               # Rents
        - TRANSFERENCIA_CUSTODIA # Custody Transfer
        - TRANSFERENCIA_TITULARIDADE # Ownership Transfer
        - OUTROS                 # Others
      example: DIVIDENDOS # Dividends
    EnumVariableIncomesTransactionsCurrentType:
      type: string
      description: |
        Type of transaction in investment view: entry or exit. In cases of dividend, JCP and rent payments, it is agreed that the type of movement will be considered as exit.
      enum:
        - ENTRADA # Entry
        - SAIDA   # Exit
      example: SAIDA # Exit
    EnumVariableIncomesTransactionsCurrentTransactionType:
      type: string
      description: |
        The field must classify the transaction into one of the types described: purchase, sale, dividends, JCP, rents, custody transfer, ownership transfer and others.
        The transmitter must classify the available transactions by associating them with one of the items in the Enum listed in this field.
        The OTHER option should only be used for cases where the shared transaction cannot in fact be classified as one of the items in this Enum.
        The expression “rents” should only be used to report interest/remuneration paid/received by the client from stock lending contracts, following the same ENTRY/EXIT understanding of the expression “dividends”.
      enum:
        - COMPRA                 # Buy
        - VENDA                  # Sale
        - DIVIDENDOS             # Dividends
        - JCP                    # JCP (Juros sobre Capital Próprio - Interest on Equity)
        - ALUGUEIS               # Rents
        - TRANSFERENCIA_CUSTODIA # Custody Transfer
        - TRANSFERENCIA_TITULARIDADE # Ownership Transfer
        - OUTROS                 # Others
      example: DIVIDENDOS # Dividends
    ResponseVariableIncomesBroker:
      type: object
      required:
        - data
        - meta
      properties:
        data:
          $ref: '#/components/schemas/ResponseVariableIncomesBrokerData'
        meta:
          $ref: '#/components/schemas/VariableIncomesMeta'
      additionalProperties: false
    ResponseVariableIncomesBrokerData:
      type: object
      required:
        - brokerNoteNumber
        - grossValue
        - brokerageFee
        - clearingSettlementFee
        - clearingRegistrationFee
        - stockExchangeAssetTradeNoticeFee
        - stockExchangeFee
        - clearingCustodyFee
        - taxes
        - incomeTax
        - netValue
      properties:
        brokerNoteNumber:
          type: string
          description: Broker note identifier.
          maxLength: 16
          pattern: '^\d{1,16}$'
          example: '1854009930314350'
        grossValue:
          type: object
          description: The value of the broker note is the sum of the transactions carried out. Total purchases and sales of the day.
          required:
            - amount
            - currency
          properties:
            amount:
              type: string
              format: double
              description: Value related to the object.
              pattern: '^-?\d{1,15}\.\d{2,4}$'
              maxLength: 21
              example: '5000.0024'
            currency:
              type: string
              description: 'Currency referring to the monetary value, following the ISO-4217 model.'
              pattern: '^[A-Z]{3}$'
              maxLength: 3
              example: BRL
        brokerageFee:
          type: object
          description: |
            Brokerage fee is levied on the gross value of the broker note, and is freely agreed between the investor and their intermediary.
            It can be charged as a fixed amount per transaction, or as a percentage of the amount traded, or even in a mixed form, according to the CVM investor guide.
          required:
            - amount
            - currency
          properties:
            amount:
              type: string
              format: double
              description: Value related to the object.
              pattern: '^-?\d{1,15}\.\d{2,4}$'
              maxLength: 21
              example: '13.8751'
            currency:
              type: string
              description: 'Currency referring to the monetary value, following the ISO-4217 model.'
              pattern: '^[A-Z]{3}$'
              maxLength: 3
              example: BRL
        clearingSettlementFee:
          type: object
          description: Amount charged for settlement in custody.
          required:
            - amount
            - currency
          properties:
            amount:
              type: string
              format: double
              description: Value related to the object.
              pattern: '^-?\d{1,15}\.\d{2,4}$'
              maxLength: 21
              example: '13.8751'
            currency:
              type: string
              description: 'Currency referring to the monetary value, following the ISO-4217 model.'
              pattern: '^[A-Z]{3}$'
              maxLength: 3
              example: BRL
        clearingRegistrationFee:
          type: object
          description: Amount charged for registration in custody.
          required:
            - amount
            - currency
          properties:
            amount:
              type: string
              format: double
              description: Value related to the object.
              pattern: '^-?\d{1,15}\.\d{2,4}$'
              maxLength: 21
              example: '13.8751'
            currency:
              type: string
              description: 'Currency referring to the monetary value, following the ISO-4217 model.'
              pattern: '^[A-Z]{3}$'
              maxLength: 3
              example: BRL
        stockExchangeAssetTradeNoticeFee:
          type: object
          description: Amount charged by the exchange for the asset trading notice.
          required:
            - amount
            - currency
          properties:
            amount:
              type: string
              format: double
              description: Value related to the object.
              pattern: '^-?\d{1,15}\.\d{2,4}$'
              maxLength: 21
              example: '13.8751'
            currency:
              type: string
              description: 'Currency referring to the monetary value, following the ISO-4217 model.'
              pattern: '^[A-Z]{3}$'
              maxLength: 3
              example: BRL
        stockExchangeFee:
          type: object
          description: Amount charged by the exchange to remunerate the registration services provided.
          required:
            - amount
            - currency
          properties:
            amount:
              type: string
              format: double
              description: Value related to the object.
              pattern: '^-?\d{1,15}\.\d{2,4}$'
              maxLength: 21
              example: '13.8751'
            currency:
              type: string
              description: 'Currency referring to the monetary value, following the ISO-4217 model.'
              pattern: '^[A-Z]{3}$'
              maxLength: 3
              example: BRL
        clearingCustodyFee:
          type: object
          description: Fee charged by FIs for custody.
          required:
            - amount
            - currency
          properties:
            amount:
              type: string
              format: double
              description: Value related to the object.
              pattern: '^-?\d{1,15}\.\d{2,4}$'
              maxLength: 21
              example: '13.8751'
            currency:
              type: string
              description: 'Currency referring to the monetary value, following the ISO-4217 model.'
              pattern: '^[A-Z]{3}$'
              maxLength: 3
              example: BRL
        taxes:
          type: object
          description: 'Taxes charged on the transaction, including day-trade income tax, except for income tax withheld at source.'
          required:
            - amount
            - currency
          properties:
            amount:
              type: string
              format: double
              description: Value related to the object.
              pattern: '^-?\d{1,15}\.\d{2,4}$'
              maxLength: 21
              example: '13.8751'
            currency:
              type: string
              description: 'Currency referring to the monetary value, following the ISO-4217 model.'
              pattern: '^[A-Z]{3}$'
              maxLength: 3
              example: BRL
        incomeTax:
          type: object
          description: Income tax withheld at source.
          required:
            - amount
            - currency
          properties:
            amount:
              type: string
              format: double
              description: Value related to the object.
              pattern: '^-?\d{1,15}\.\d{2,4}$'
              maxLength: 21
              example: '13.8751'
            currency:
              type: string
              description: 'Currency referring to the monetary value, following the ISO-4217 model.'
              pattern: '^[A-Z]{3}$'
              maxLength: 3
              example: BRL
        netValue:
          type: object
          description: Net value of the broker note after expenses with brokerage fee, settlement fee, registration fee, A.N.A fee, emoluments, custody fee, taxes and IRRF.
          required:
            - amount
            - currency
          properties:
            amount:
              type: string
              format: double
              description: Value related to the object.
              pattern: '^-?\d{1,15}\.\d{2,4}$'
              maxLength: 21
              example: '4889.0012'
            currency:
              type: string
              description: 'Currency referring to the monetary value, following the ISO-4217 model.'
              pattern: '^[A-Z]{3}$'
              maxLength: 3
              example: BRL
      additionalProperties: false
    ResponseErrorMetaSingle:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          minItems: 1
          maxItems: 13
          items:
            type: object
            required:
              - code
              - title
              - detail
            properties:
              code:
                description: Endpoint specific error code
                type: string
                pattern: '[\w\W\s]*'
                maxLength: 255
              title:
                description: Human-readable title of this specific error
                type: string
                pattern: '[\w\W\s]*'
                maxLength: 255
              detail:
                description: Human-readable description of this specific error
                type: string
                pattern: '[\w\W\s]*'
                maxLength: 2048
        meta:
          $ref: '#/components/schemas/MetaOnlyRequestDateTime'
    MetaOnlyRequestDateTime:
      type: object
      description: Meta information regarding the requested API.
      required:
        - requestDateTime
      properties:
        requestDateTime:
          description: 'Date and time of the query, according to RFC-3339 specification, UTC format.'
          type: string
          maxLength: 20
          format: date-time
          example: '2021-05-21T08:30:00Z'
    ResponseErrorWithAbleAdditionalProperties:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          minItems: 1
          maxItems: 13
          items:
            type: object
            required:
              - code
              - title
              - detail
            properties:
              code:
                description: Endpoint specific error code
                type: string
                pattern: '[\w\W\s]*'
                maxLength: 255
              title:
                description: Human-readable title of this specific error
                type: string
                pattern: '[\w\W\s]*'
                maxLength: 255
              detail:
                description: Human-readable description of this specific error
                type: string
                pattern: '[\w\W\s]*'
                maxLength: 2048
        meta:
          $ref: '#/components/schemas/MetaWithAbleAdditionalProperties'
    MetaSingleWithHasMoreRecords:
      type: object
      description: Meta information regarding the requested API.
      required:
        - requestDateTime
        - hasMoreRecords
      properties:
        requestDateTime:
          description: 'Date and time of the query, according to RFC-3339 specification, UTC format.'
          type: string
          maxLength: 20
          format: date-time
        hasMoreRecords:
          type: boolean
          description: Indicates whether there are more records to be returned (true) or not (false).
          example: true
    MetaWithAbleAdditionalProperties:
      type: object
      description: Meta information regarding the requested API.
      required:
        - totalRecords
        - totalPages
        - requestDateTime
      properties:
        totalRecords:
          type: integer
          format: int32
          description: Total number of records in the result
          example: 1
        totalPages:
          type: integer
          format: int32
          description: Total number of pages in the result
          example: 1
        requestDateTime:
          description: 'Date and time of the query, according to RFC-3339 specification, UTC format.'
          type: string
          maxLength: 20
          format: date-time
          example: '2021-05-21T08:30:00Z'
    ConsentDataSharing:
      description: Data sharing consent
      type: object
      required:
        - brandId
        - creationDateTime
        - tpp
        - externalId
        - loggedUser
        - permissions
      properties:
        authExtraData:
          type: array
          description: |
            Array of key and value with additional data coming from the authorizer. These
            data can be used as resource filters.
          items:
            type: object
            required:
              - key
              - value
            properties:
              key:
                type: string
                example: agencia # agency
              value:
                type: string
                example: '0011'
        consentOwner:
          deprecated: true
          type: array
          description: |
            [Deprecated] Array of key and value with the identification data
            referring to the consent owner.
          items:
            type: object
            required:
              - key
              - value
            properties:
              key:
                type: string
                example: agencia # agency
              value:
                type: string
                example: '0011'
        brandId:
          type: string
          description: Brand identifier reported by the Open Finance participant
          example: cbanco
          minLength: 1
          maxLength: 50
        creationDateTime:
          description: |
            Date and time when the consent was created. A string with date and
            time according to RFC-3339 specification, always using
            UTC timezone (UTC time format).
          type: string
          pattern: |
            ^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\d|2[0123]):(?:[012345]\d):(?:[012345]\d)Z$
          example: '2021-05-21T08:30:00Z'
          maxLength: 20
        tpp:
          type: object
          description: Details of the TPP (Third Party Provider) that requested consent
          additionalProperties: false
          required:
            - name
          properties:
            name:
              type: string
              description: Name of the TPP that requested consent
              example: GuiaBolsa
              maxLength: 100
        externalId:
          type: string
          description: Consent identifier used outside the Opus Open Finance platform
          example: urn:oob-bank:2f710909-4ccd-4998-8679-3d8de00e5ccf
          maxLength: 100
        loggedUser:
          type: object
          description: |
            User (natural person) who is logged in at the Data Transmitting institution.
          additionalProperties: false
          required:
            - document
          properties:
            document:
              type: object
              description: Official identification document of the user.
              additionalProperties: false
              required:
                - identification
                - rel
              properties:
                identification:
                  type: string
                  maxLength: 11
                  description: Official identification document number of the user.
                  example: '11111111111'
                  pattern: ^\d{11}$
                rel:
                  type: string
                  maxLength: 3
                  description: Type of official identification document of the user.
                  example: CPF
                  pattern: ^[A-Z]{3}$
        businessDocumentType:
          type: object
          description: |
            User (legal entity) who is logged in at the Data Transmitting institution.

            [Restriction] Mandatory to fill in if the user logged in at the Data
            Transmitting institution is a CNPJ (legal entity).
          additionalProperties: false
          required:
            - document
          properties:
            document:
              type: object
              description: Official identification document of the legal entity holder.
              additionalProperties: false
              required:
                - identification
                - rel
              properties:
                identification:
                  type: string
                  maxLength: 14
                  description: |
                    Official identification document number of the legal entity
                    holder.
                  example: '11111111111111'
                  pattern: ^\d{14}$
                rel:
                  type: string
                  maxLength: 4
                  description: |
                    Type of official identification document of the legal entity
                    holder.
                  example: CNPJ
                  pattern: ^[A-Z]{4}$
        resources:
          description: |
            List of resources allowed by the client
          type: array
          items:
            type: object
            description: Resources selected by the client
            required:
              - type
              - resourceLegacyId
            properties:
              type:
                description: Resource type
                type: string
                enum:
                  - ACCOUNT
                  - CREDIT_CARD_ACCOUNT
                  - LOAN
                  - FINANCING
                  - UNARRANGED_ACCOUNT_OVERDRAFT
                  - INVOICE_FINANCING
                  - PAYMENT
                  - BANK_FIXED_INCOME
                  - CREDIT_FIXED_INCOME
                  - VARIABLE_INCOME
                  - TREASURE_TITLE  # TREASURY_BONDS
                  - FUND
                example: PAYMENT
              resourceLegacyId:
                $ref: '#/components/schemas/LegacyId'
              authorizers:
                deprecated: true
                description: |
                  [Deprecated] List of authorizers for the resource for cases of
                  multiple levels of authority. If the resource is selected, all
                  authorizers must accept the consent that the resource is part of
                type: array
                items:
                  type: object
                  required:
                    - cpf
                    - name
                  properties:
                    cpf:
                      description: Authorizer's CPF
                      type: string
                      minLength: 11
                      maxLength: 11
                      pattern: ^\d{11}$
                      example: '11111111111'
                    name:
                      description: Authorizer's name
                      type: string
                      example: Marco Antonio de Brito
                minItems: 1
              hasMultipleAuthorisers:
                deprecated: true
                type: boolean
                example: 'false'
            additionalProperties: false
          maxItems: 1000
        expirationDateTime:
          description: |
            Permission expiration date and time. Mandatory to fill in,
            reflects the validity limit date of the consent. A string with
            date and time according to RFC-3339 specification, always using
            UTC timezone (UTC time format).
          type: string
          maxLength: 20
          pattern: |
            ^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\d|2[0123]):(?:[012345]\d):(?:[012345]\d)Z$
          example: '2021-05-21T08:30:00Z'
        permissions:
          type: array
          items:
            description: |
              Only for data sharing consents. Specifies
              the types of API access permissions within the scope of Open Finance
              Brasil - Phase 2, according to the consent blocks provided
              by the user and necessary to access each API endpoint.
            type: string
            enum:
              - ACCOUNTS_READ
              - ACCOUNTS_BALANCES_READ
              - ACCOUNTS_TRANSACTIONS_READ
              - ACCOUNTS_OVERDRAFT_LIMITS_READ
              - CREDIT_CARDS_ACCOUNTS_READ
              - CREDIT_CARDS_ACCOUNTS_BILLS_READ
              - CREDIT_CARDS_ACCOUNTS_BILLS_TRANSACTIONS_READ
              - CREDIT_CARDS_ACCOUNTS_LIMITS_READ
              - CREDIT_CARDS_ACCOUNTS_TRANSACTIONS_READ
              - CUSTOMERS_PERSONAL_IDENTIFICATIONS_READ
              - CUSTOMERS_PERSONAL_ADITTIONALINFO_READ
              - CUSTOMERS_BUSINESS_IDENTIFICATIONS_READ
              - CUSTOMERS_BUSINESS_ADITTIONALINFO_READ
              - FINANCINGS_READ
              - FINANCINGS_SCHEDULED_INSTALMENTS_READ
              - FINANCINGS_PAYMENTS_READ
              - FINANCINGS_WARRANTIES_READ
              - INVOICE_FINANCINGS_READ
              - INVOICE_FINANCINGS_SCHEDULED_INSTALMENTS_READ
              - INVOICE_FINANCINGS_PAYMENTS_READ
              - INVOICE_FINANCINGS_WARRANTIES_READ
              - LOANS_READ
              - LOANS_SCHEDULED_INSTALMENTS_READ
              - LOANS_PAYMENTS_READ
              - LOANS_WARRANTIES_READ
              - UNARRANGED_ACCOUNTS_OVERDRAFT_READ
              - UNARRANGED_ACCOUNTS_OVERDRAFT_SCHEDULED_INSTALMENTS_READ
              - UNARRANGED_ACCOUNTS_OVERDRAFT_PAYMENTS_READ
              - UNARRANGED_ACCOUNTS_OVERDRAFT_WARRANTIES_READ
              - BANK_FIXED_INCOMES_READ
              - CREDIT_FIXED_INCOMES_READ
              - FUNDS_READ
              - VARIABLE_INCOMES_READ
              - TREASURE_TITLES_READ  # TREASURY_BONDS_READ
              - EXCHANGES_READ
              - RESOURCES_READ
          minItems: 1
          maxItems: 30
          example: ACCOUNTS_READ
      additionalProperties: false
    RequestMeta:
      type: object
      description: Object containing data referring to the context in which the request is received.
      required:
        - correlationId
        - brandId
      properties:
        correlationId:
          type: string
          description: UUID that identifies the correlation ID of the request made. It must be propagated to all calls made between systems and logged whenever possible to facilitate error tracing
          pattern: >-
            ^(localID:)?[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
          example: localID:97623ed1-4732-4bf2-8d4b-ae7aced5443b
        brandId:
          type: string
          description: Brand identifier reported by the Open Finance participant
          example: cbanco
          minLength: 1
          maxLength: 50
      additionalProperties: false
    RequestWithConsentAndRequestMetaAndPagination:
      type: object
      required:
        - consent
        - requestMeta
      properties:
        consent:
          $ref: '#/components/schemas/ConsentDataSharing'
        requestMeta:
          $ref: '#/components/schemas/RequestMeta'
        page:
          $ref: '#/components/schemas/Page'
        pageSize:
          $ref: '#/components/schemas/PageSize'
        pagination-key:
          $ref: '#/components/schemas/PaginationKey'
    RequestWithConsentAndRequestMetaAndInvestmentId:
      type: object
      required:
        - consent
        - requestMeta
        - investmentId
      properties:
        consent:
          $ref: '#/components/schemas/ConsentDataSharing'
        requestMeta:
          $ref: '#/components/schemas/RequestMeta'
        investmentId:
          $ref: '#/components/schemas/LegacyId'
    RequestWithConsentAndRequestMetaAndBrokerNoteId:
      type: object
      required:
        - consent
        - requestMeta
        - brokerNoteId
      properties:
        consent:
          $ref: '#/components/schemas/ConsentDataSharing'
        requestMeta:
          $ref: '#/components/schemas/RequestMeta'
        brokerNoteId:
          $ref: '#/components/schemas/LegacyId'
    RequestWithConsentAndRequestMeta:
      type: object
      required:
        - consent
        - requestMeta
      properties:
        consent:
          $ref: '#/components/schemas/ConsentDataSharing'
        requestMeta:
          $ref: '#/components/schemas/RequestMeta'
    RequestTransactions:
      type: object
      required:
        - consent
        - requestMeta
        - investmentId
      properties:
        consent:
          $ref: '#/components/schemas/ConsentDataSharing'
        requestMeta:
          $ref: '#/components/schemas/RequestMeta'
        investmentId:
          $ref: '#/components/schemas/LegacyId'
        page:
          $ref: '#/components/schemas/Page'
        pageSize:
          $ref: '#/components/schemas/PageSize'
        fromTransactionDate:
          $ref: '#/components/schemas/FromTransactionDate'
        toTransactionDate:
          $ref: '#/components/schemas/ToTransactionDate'
        pagination-key:
          $ref: '#/components/schemas/PaginationKey'
    RequestTransactionsCurrent:
      type: object
      required:
        - consent
        - requestMeta
        - investmentId
      properties:
        consent:
          $ref: '#/components/schemas/ConsentDataSharing'
        requestMeta:
          $ref: '#/components/schemas/RequestMeta'
        investmentId:
          $ref: '#/components/schemas/LegacyId'
        page:
          $ref: '#/components/schemas/Page'
        pageSize:
          $ref: '#/components/schemas/PageSize'
        fromTransactionDate:
          $ref: '#/components/schemas/FromTransactionDateMaxLimited'
        toTransactionDate:
          $ref: '#/components/schemas/ToTransactionDateMaxLimited'
        pagination-key:
          $ref: '#/components/schemas/PaginationKey'
    LegacyId:
      description: >-
        Array of key and value with the resource identification key in the
        origin (legacy) system, allowing composite keys
      type: array
      items:
        type: object
        required:
          - key
          - value
        properties:
          key:
            description: Name of the identifier field in the origin system
            type: string
            example: internalResourceId
          value:
            description: Value of the identifier field in the origin system
            type: string
            example: '1234'
        additionalProperties: false
      minItems: 1
      maxItems: 10
    FromTransactionDate:
      description: |
        Initial filtering date.

        [Restriction] Must be mandatorily sent if the toTransactionDate field is informed. If not informed, the current day must be assumed.
      type: string
      maxLength: 10
      format: date
      example: '2021-05-21'
    FromTransactionDateMaxLimited:
      description: |
        Initial filtering date. The maximum period used in the filter is 7 days inclusive (D-6).

        [Restriction] Must be mandatorily sent if the toTransactionDate field is informed. If not informed, the current day must be assumed.
      type: string
      maxLength: 10
      format: date
      example: '2021-05-21'
    ToTransactionDate:
      description: |
        Final filtering date.

        [Restriction] Must be mandatorily sent if the fromTransactionDate field is informed. If not informed, the current day must be assumed.
      type: string
      maxLength: 10
      format: date
      example: '2021-05-21'
    ToTransactionDateMaxLimited:
      description: |
        Final filtering date. The maximum period used in the filter is 7 days inclusive (D-6).

        [Restriction] Must be mandatorily sent if the fromTransactionDate field is informed. If not informed, the current day must be assumed.
      type: string
      maxLength: 10
      format: date
      example: '2021-05-21'
    PaginationKey:
      description: >-
        Re-call identifier, used to avoid counting calls
        to the endpoint during pagination.
      type: string
      maxLength: 2048
      pattern: '[\w\W\s]*'
    Page:
      description: Page number being requested (the value of the first page is 1).
      type: integer
      default: 1
      minimum: 1
      maximum: 2147483647
      format: int32
    PageSize:
      description: Total number of records per page.
      type: integer
      default: 25
      minimum: 1
      format: int32
      maximum: 1000
  responses:
    ResponseVariableIncomesBalances:
      description: Data successfully obtained
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponseVariableIncomesBalances'
    OKResponseVariableIncomesProductList:
      description: Investment fund data successfully obtained.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponseVariableIncomesProductList'
    OKResponseVariableIncomesProductIdentification:
      description: Investment fund data successfully obtained.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponseVariableIncomesProductIdentification'
    OKResponseVariableIncomesTransactions:
      description: Investment fund data successfully obtained.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponseVariableIncomesTransactions'
    OKResponseVariableIncomesTransactionsCurrent:
      description: Investment fund data successfully obtained.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponseVariableIncomesTransactionsCurrent'
    ResponseVariableIncomesBroker:
      description: Investment fund data successfully obtained.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponseVariableIncomesBroker'
    BadRequest:
      description: 'The request was malformed, omitting mandatory attributes, either in the payload or through attributes in the URL.'
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseErrorMetaSingle'
    Forbidden:
      description: The token has incorrect scope or a security policy has been violated
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseErrorMetaSingle'
    GatewayTimeout:
      description: GATEWAY TIMEOUT - The request was not answered within the established timeout
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseErrorMetaSingle'
    InternalServerError:
      description: An error occurred in the API gateway or microservice
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseErrorMetaSingle'
    Locked:
      description: Locked
      content:
        application/json; charset=utf-8:
          schema:
            type: object
            required:
              - errors
            properties:
              errors:
                type: array
                minItems: 1
                maxItems: 13
                items:
                  type: object
                  required:
                    - code
                    - title
                    - detail
                  properties:
                    code:
                      description: Endpoint specific error code
                      type: string
                      pattern: '[\w\W\s]*'
                      maxLength: 255
                    title:
                      description: Human-readable title of this specific error
                      type: string
                      pattern: '[\w\W\s]*'
                      maxLength: 255
                    detail:
                      description: Human-readable description of this specific error
                      type: string
                      pattern: '[\w\W\s]*'
                      maxLength: 2048
              meta:
                type: object
                description: Meta information regarding the requested API.
                required:
                  - requestDateTime
                properties:
                  requestDateTime:
                    description: 'Date and time of the query, according to RFC-3339 specification, UTC format.'
                    type: string
                    maxLength: 20
                    format: date-time
                    example: '2021-05-21T08:30:00Z'
    MethodNotAllowed:
      description: The consumer tried to access the resource with an unsupported method
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseErrorMetaSingle'
    NotAcceptable:
      description: The request contained an Accept header different from the allowed media types or a character set other than UTF-8
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseErrorMetaSingle'
    NotFound:
      description: The requested resource does not exist or has not been implemented
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseErrorMetaSingle'
    TooManyRequests:
      description: 'The operation was refused because too many requests were made within a certain period or the global limit of concurrent requests was reached'
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseErrorMetaSingle'
    Unauthorized:
      description: Missing/invalid authentication header or invalid token
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseErrorMetaSingle'
    UnprocessableEntity:
      description: 'The request syntax is correct, but it was not possible to process the instructions present.'
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseErrorMetaSingle'
    Default:
      description: Unexpected error.
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseErrorMetaSingle'
    SiteIsOverloaded:
      description: 'The site is overloaded and the operation was refused because the global TPS maximum limit was reached at this time.'
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseErrorMetaSingle'
    BadRequestWithAdditionalProperties:
      description: 'The request was malformed, omitting mandatory attributes, either in the payload or through attributes in the URL.'
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseErrorWithAbleAdditionalProperties'
    ForbiddenWithAdditionalProperties:
      description: The token has incorrect scope or a security policy has been violated
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseErrorWithAbleAdditionalProperties'
    GatewayTimeoutWithAdditionalProperties:
      description: GATEWAY TIMEOUT - The request was not answered within the established timeout
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseErrorWithAbleAdditionalProperties'
    InternalServerErrorWithAdditionalProperties:
      description: An error occurred in the API gateway or microservice
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseErrorWithAbleAdditionalProperties'
    LockedWithAdditionalProperties:
      description: Locked
      content:
        application/json; charset=utf-8:
          schema:
            type: object
            required:
              - errors
            properties:
              errors:
                type: array
                minItems: 1
                maxItems: 13
                items:
                  type: object
                  required:
                    - code
                    - title
                    - detail
                  properties:
                    code:
                      description: Endpoint specific error code
                      type: string
                      pattern: '[\w\W\s]*'
                      maxLength: 255
                    title:
                      description: Human-readable title of this specific error
                      type: string
                      pattern: '[\w\W\s]*'
                      maxLength: 255
                    detail:
                      description: Human-readable description of this specific error
                      type: string
                      pattern: '[\w\W\s]*'
                      maxLength: 2048
              meta:
                type: object
                description: Meta information regarding the requested API.
                required:
                  - totalRecords
                  - totalPages
                  - requestDateTime
                properties:
                  totalRecords:
                    type: integer
                    format: int32
                    description: Total number of records in the result
                    example: 1
                  totalPages:
                    type: integer
                    format: int32
                    description: Total number of pages in the result
                    example: 1
                  requestDateTime:
                    description: 'Date and time of the query, according to RFC-3339 specification, UTC format.'
                    type: string
                    maxLength: 20
                    format: date-time
                    example: '2021-05-21T08:30:00Z'
    MethodNotAllowedWithAdditionalProperties:
      description: The consumer tried to access the resource with an unsupported method
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseErrorWithAbleAdditionalProperties'
    NotAcceptableWithAdditionalProperties:
      description: The request contained an Accept header different from the allowed media types or a character set other than UTF-8
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseErrorWithAbleAdditionalProperties'
    NotFoundWithAdditionalProperties:
      description: The requested resource does not exist or has not been implemented
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseErrorWithAbleAdditionalProperties'
    TooManyRequestsWithAdditionalProperties:
      description: 'The operation was refused because too many requests were made within a certain period or the global limit of concurrent requests was reached'
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseErrorWithAbleAdditionalProperties'
    UnauthorizedWithAdditionalProperties:
      description: Missing/invalid authentication header or invalid token
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseErrorWithAbleAdditionalProperties'
    UnprocessableEntityWithAdditionalProperties:
      description: 'The request syntax is correct, but it was not possible to process the instructions present.'
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseErrorWithAbleAdditionalProperties'
    DefaultWithAdditionalProperties:
      description: Unexpected error.
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseErrorWithAbleAdditionalProperties'
    SiteIsOverloadedWithAdditionalProperties:
      description: 'The site is overloaded and the operation was refused because the global TPS maximum limit was reached at this time.'
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseErrorWithAbleAdditionalProperties'
