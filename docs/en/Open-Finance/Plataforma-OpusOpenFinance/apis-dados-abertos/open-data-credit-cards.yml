openapi: 3.0.0
info:
  title: Open Finance Brasil OpenData Credit Cards API
  description: The API described in this document refers to the Credit Cards APIs of the OpenData phase of Open Finance Brasil.
  version: 1.0.1
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0'
tags:
  - name: Credit Cards
    description: Credit card listing operations.
paths:
  /personal-credit-cards:
    get:
      tags:
        - Credit Cards
      summary: Get data on personal credit cards
      description: Get data on personal credit cards
      operationId: getPersonalCreditCards
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/pageSize"
      responses:
        '200':
          description: Data on personal credit cards successfully obtained.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalCreditCardResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
        '529':
          $ref: '#/components/responses/SiteIsOverloaded'
        default:
          $ref: '#/components/responses/Default'
  /business-credit-cards:
    get:
      tags:
        - Credit Cards
      summary: Get data on business credit cards
      description: Get data on business credit cards
      operationId: getBusinessCreditCards
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/pageSize"
      responses:
        '200':
          description: Data on business credit cards successfully obtained.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessCreditCardResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
        '529':
          $ref: '#/components/responses/SiteIsOverloaded'
        default:
          $ref: '#/components/responses/Default'
components:
  schemas:
    ApplicationRate:
      type: object
      required:
        - interval
        - indexer
        - customers
      x-regulatory-required:
        - interval
        - indexer
        - customers
      properties:
        interval:
          $ref: '#/components/schemas/ApplicationIntervals'
        indexer:
          $ref: '#/components/schemas/Indexer'
        customers:
          $ref: '#/components/schemas/Customer'
    Indexer:
      type: object
      x-regulatory-required:
        - rate
      properties:
        rate:
          type: string
          pattern: '^\d{1}\.\d{6}$'
          minLength: 8
          maxLength: 8
          description: |
            Percentage that corresponds to the median of the effective rate charged to the customer for contracting credit, in the informed interval. Ex. '0,8700%'. The calculation can happen with up to 4 decimal places. The filling must respect the 4 decimal places, even if they are filled with zeros (percentage representation, e.g.: 0.1500. This value represents 15%. The value 1 represents 100%)
          example: '0.870000'
    PriceIntervals:
      type: string
      enum:
        - 1_FAIXA # 1st range
        - 2_FAIXA # 2nd range
        - 3_FAIXA # 3rd range
        - 4_FAIXA # 4th range
      description: |
        According to Normative Instruction No. 32, BCB, of 2020: Distribution of relative frequency of tariff values charged to customers, as per ยง 2 of art. 3 of Circular No. 4,015, of 2020, must be based on four ranges of equal size, with explicit values on the median in each of these ranges. Reporting: 1st range, 2nd range, 3rd range and 4th range
      example: 1_FAIXA
    ApplicationIntervals:
      type: string
      description: |
        Ranges for charging the effective rate applied for contracting credit, in the informed interval: 1st range, 2nd range, 3rd range and 4th range. According to Normative Instruction No. 32 of 2020: 'Distribution of relative frequency of tariff values and interest rates charged to customers, as per ยง 2 of art. 3 of Circular No. 4,015, of 2020, must be based on four ranges of equal size, with explicit values on the median and the percentage of customers in each of these ranges.
      enum:
        - 1_FAIXA # 1st range
        - 2_FAIXA # 2nd range
        - 3_FAIXA # 3rd range
        - 4_FAIXA # 4th range
      example: 4_FAIXA
    CreditCardIdentification:
      type: object
      required:
        - product
        - creditCard
      properties:
        product:
          type: object
          required:
            - type
          x-regulatory-required:
            - type
            - typeAdditionalInfo
          properties:
            type:
              type: string
              enum:
                - CLASSIC_INTERNACIONAL         # Classic National
                - CLASSIC_INTERNACIONAL         # Classic International
                - GOLD
                - PLATINUM
                - INFINITE
                - ELECTRON
                - STANDARD_NACIONAL             # Standard National
                - STANDARD_INTERNACIONAL        # Standard International
                - ELETRONIC
                - BLACK
                - REDESHOP
                - MAESTRO_MASTERCARD_MAESTRO
                - GREEN
                - BLUE
                - BLUEBOX
                - PROFISSIONAL_LIBERAL          # Self-Employed Professional
                - CHEQUE_ELETRONICO             # Electronic Check/Cheque
                - CORPORATIVO                   # Corporate
                - EMPRESARIAL                   # Business
                - COMPRAS                       # Retail
                - OUTROS                        # Others
              description: 'Category assigned to a payment card, under a certain denomination, which adds a set of advantages to it, differentiating it according to the cardholder profile. This category is defined by BACEN and is contained in the document named ''Preparation and Submission of Information Regarding Payment Cards Issuers'''
              example: PLATINUM
            typeAdditionalInfo:
              type: string
              maxLength: 140
              pattern: '^(?!\s)[\w\W\s]*[^\s]$'
              description: |
                Free field to fill in additional information regarding the "type" field.

                [Restriction] Mandatory when "type" is equal to "OUTROS" (OTHERS).
              example: 'Additional information'
        creditCard:
          type: object
          required:
            - network
          x-regulatory-required:
            - network
            - networkAdditionalInfo
          properties:
            network:
              type: string
              enum:
                - VISA
                - MASTERCARD
                - AMERICAN_EXPRESS
                - DINERS_CLUB
                - HIPERCARD
                - BANDEIRA_PROPRIA    # Own Brand
                - CHEQUE_ELETRONICO   # Electornic Check/Cheque
                - ELO
                - OUTRAS              # Others
              description: 'Category of Credit Card Brands (Payment Arrangement Institution). Brand is the holder of all rights and duties of using the brand printed on the card, including brands belonging to issuers. ex. "American Express", "Diners Club" These brands are defined in a BACEN document named "Preparation and Submission of Information Regarding Payment Cards Issuers"'
              example: MASTERCARD
            networkAdditionalInfo:
              type: string
              maxLength: 140
              pattern: '^(?!\s)[\w\W\s]*[^\s]$'
              description: |
                Free field to fill in additional information regarding the "network" field.

                [Restriction] Mandatory when "network" is equal to "OUTROS" (OTHERS).
              example: 'Additional information'
    CreditCardRewardsProgram:
      type: object
      required:
        - hasRewardProgram
      x-regulatory-required:
        - hasRewardProgram
        - rewardProgramInfo
      properties:
        hasRewardProgram:
          type: boolean
          description: 'Indicator of the existence of a loyalty/rewards program associated with the postpaid payment account (card) true false'
          example: false
        rewardProgramInfo:
          type: string
          maxLength: 2000
          pattern: '^(?!\s)[\w\W\s]*[^\s]$'
          description: Loyalty/rewards program terms and conditions information. The URL referring to the address where the informed conditions are found may be informed. It will be mandatory to fill in if the hasRewardProgram field is filled in as true
          example: 'https://empresaa1.com/credit_cards_rewards'
    CreditCardTermsConditions:
      type: object
      required:
        - minimumFeeRate
        - elegibilityCriteriaInfo
        - closingProcessInfo
      x-regulatory-required:
        - minimumFeeRate
        - additionalInfo
        - elegibilityCriteriaInfo
        - closingProcessInfo
      properties:
        minimumFeeRate:
          type: string
          pattern: '^\d{1}\.\d{6}$'
          description: Percentage for minimum payment on the outstanding balance of the invoice.
          example: '0.250000'
          minLength: 8
          maxLength: 8
        additionalInfo:
          type: string
          maxLength: 500
          pattern: '^(?!\s)[\w\W\s]*[^\s]$'
          description: Open field for detailing interest rates
          example: 'NA'
        elegibilityCriteriaInfo:
          type: string
          maxLength: 2000
          pattern: '^(?!\s)[\w\W\s]*[^\s]$'
          description: 'Information on the conditions and eligibility criteria of the card issuer. The URL referring to the address where the informed conditions are found may be informed.'
          example: 'https://empresaa1.com/creditcards_elegibility_criteria'
        closingProcessInfo:
          type: string
          maxLength: 2000
          pattern: '^(?!\s)[\w\W\s]*[^\s]$'
          description: 'Description of the procedures for closing the postpaid payment account. The URL referring to the address where the informed conditions are found may be informed.'
          example: 'https://empresaa1.com/creditcards_closing_process'
    CreditCardInterest:
      type: object
      description: Interest rate information
      required:
        - rates
        - instalmentRates
        - otherCredits
      properties:
        rates:
          type: array
          items:
            $ref: '#/components/schemas/InterestRate'
          minItems: 1
          maxItems: 20
          description: List of representation that brings together the set of information necessary to demonstrate the frequency distribution of revolving credit interest rates
        instalmentRates:
          type: array
          items:
            $ref: '#/components/schemas/InterestRate'
          minItems: 1
          maxItems: 20
          description: List of representation that brings together the set of information necessary to demonstrate the frequency distribution of interest rates for installment of the outstanding balance
        otherCredits:
          type: array
          description: List of other credit operations
          items:
            $ref:  "#/components/schemas/CreditCardInterestRate"
          minItems: 1
          maxItems: 3
    RequiredWarranty:
      type: string
      enum:
        - CESSAO_DIREITOS_CREDITORIOS # Assignment of Credit Rights
        - ALIENACAO_FIDUCIARIA        # Fiduciary Alienation
        - GARANTIA_FIDEJUSSORIA       # Fidejussory Guarantee
        - NAO_EXIGE_GARANTIA          # No Warranty Required
      description: |
        List of required guarantees, according to Bacen document 3040:
        - `CESSAO_DIREITOS_CREDITORIOS`: the assignor transfers to the creditor/assignee the ownership of credit rights, until the debt is settled. The creditor/assignee starts to receive them directly from the debtors and credits the product of the operation to the assignor in the operation that originated the assignment, until its settlement
        - `ALIENACAO_FIDUCIARIA`: transfer to the creditor, or fiduciary, of the ownership of the asset
        - `GARANTIA_FIDEJUSSORIA`: based on the guarantor's fidelity to fulfill the obligations, if the debtor does not do so
        - `NAO_EXIGE_GARANTIA`
      example: CESSAO_DIREITOS_CREDITORIOS
    CreditCardInterestRate:
      type: object
      required:
        - code
      x-regulatory-required:
        - code
        - codeAdditionalInfo
      properties:
        code:
          type: string
          enum:
            - SAQUE_A_CREDITO # Cash Withdrawal
            - PAGAMENTOS_CONTAS # Account Payments
            - OUTROS # Others
          description: List of other credit operations
          example: SAQUE_A_CREDITO
        codeAdditionalInfo:
          type: string
          maxLength: 140
          pattern: '^(?!\s)[\w\W\s]*[^\s]$'
          description: |
            Free field to fill in additional information regarding the "code" field.

            [Restriction] Mandatory when "code" is equal to "OUTROS" (OTHERS).
          example: 'Additional information'
    PersonalCreditCardResponse:
      type: object
      required:
        - data
        - links
        - meta
      properties:
        data:
          type: array
          description: Set of information referring to the Credit Cards product.
          minItems: 1
          items:
            $ref: '#/components/schemas/PersonalCreditCardData'
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Meta'
    PersonalCreditCardData:
      type: object
      required:
        - name
        - identification
        - rewardsProgram
        - fees
        - interest
        - requiredWarranties
        - termsConditions
      x-regulatory-required:
        - name
      properties:
        participant:
          $ref: '#/components/schemas/Participant'
        name:
          type: string
          pattern: '^(?!\s)[\w\W\s]*[^\s]$'
          maxLength: 50
          description: Name/Identification of the account name (credit card)
          example: University Card
        identification:
          $ref: '#/components/schemas/CreditCardIdentification'
        rewardsProgram:
          $ref: '#/components/schemas/CreditCardRewardsProgram'
        fees:
          type: object
          description: Object that gathers information on service fees
          properties:
            services:
              type: array
              description: |
                List of Fees charged on Service.

                For a better understanding of the sending rule, check the developer area on the Open Data page, section: truth table with instructions for sending data by Institutions.
              items:
                $ref: '#/components/schemas/CreditCardService'
              minItems: 1
              maxItems: 9
        interest:
          $ref: '#/components/schemas/CreditCardInterest'
        requiredWarranties:
          type: array
          items:
            $ref: '#/components/schemas/RequiredWarranty'
          minItems: 1
          maxItems: 4
          description: List of required guarantees
        termsConditions:
          $ref: '#/components/schemas/CreditCardTermsConditions'
    Participant:
      type: object
      description: Set of information regarding the Open Finance participant that offers this product.
      required:
        - brand
        - name
        - cnpjNumber
      x-regulatory-required:
        - brand
        - name
        - cnpjNumber
        - urlComplementaryList
      properties:
        brand:
          type: string
          maxLength: 80
          pattern: '^(?!\s)[\w\W\s]*[^\s]$'
          description: Brand Name selected by Organizations
          example: Organization A
        name:
          type: string
          description: Name of the Institution, belonging to the brand, responsible for the Loan modality. ex. 'Company of Organization A'
          maxLength: 80
          pattern: '^(?!\s)[\w\W\s]*[^\s]$'
          example: 'Company A1'
        cnpjNumber:
          type: string
          pattern: '^\d{14}$'
          minLength: 14
          maxLength: 14
          description: CNPJ
          example: "50685362000135"
        urlComplementaryList:
          type: string
          pattern: '^(?!\s)[\w\W\s]*[^\s]$'
          maxLength: 1024
          description: |
            URL of the link that will contain the complementary list with the names and CNPJs grouped under the same cnpjNumber. Those contained in this list have the same characteristics for products and services. Electronic address for accessing the channel. It will be mandatory to fill in if there is a complementary list with the names and CNPJs to be made available.
            Restriction: It will be mandatory to fill in if there is a complementary list with the names and CNPJs to be made available
          example: 'https://empresadaorganizacaoa.com/complementarylist'
    BusinessCreditCardResponse:
      type: object
      required:
        - data
        - links
        - meta
      properties:
        data:
          type: array
          description: Set of information referring to the Credit Cards product.
          minItems: 1
          items:
            $ref: '#/components/schemas/BusinessCreditCardData'
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Meta'
    BusinessCreditCardData:
      type: object
      required:
        - name
        - identification
        - rewardsProgram
        - fees
        - interest
        - requiredWarranties
        - termsConditions
      x-regulatory-required:
        - name
      properties:
        participant:
          $ref: '#/components/schemas/Participant'
        name:
          type: string
          pattern: '^(?!\s)[\w\W\s]*[^\s]$'
          maxLength: 50
          description: Name/Identification of the account name (credit card)
          example: Advantage Card
        identification:
          $ref: '#/components/schemas/CreditCardIdentification'
        rewardsProgram:
          $ref: '#/components/schemas/CreditCardRewardsProgram'
        fees:
          type: object
          description: Object that gathers information on service fees.
          properties:
            services:
              type: array
              description: |
                List of Fees charged on Service.

                For a better understanding of the sending rule, check the developer area on the Open Data page, section: truth table with instructions for sending data by Institutions.
              items:
                $ref: '#/components/schemas/CreditCardService'
              minItems: 1
              maxItems: 9
        interest:
          $ref: '#/components/schemas/CreditCardInterest'
        requiredWarranties:
          type: array
          items:
            $ref: '#/components/schemas/RequiredWarranty'
          minItems: 1
          maxItems: 4
          description: List of required guarantees
        termsConditions:
          $ref: '#/components/schemas/CreditCardTermsConditions'
    CreditCardService:
      type: object
      required:
        - name
        - code
        - chargingTriggerInfo
        - prices
        - minimum
        - maximum
      x-regulatory-required:
        - name
        - code
        - chargingTriggerInfo
      properties:
        name:
          type: string
          enum:
            - ANUIDADE_CARTAO_BASICO_NACIONAL                         # NATIONAL_BASIC_CARD_ANNUITY
            - ANUIDADE_CARTAO_BASICO_INTERNACIONAL                    # INTERNATIONAL_BASIC_CARD_ANNUITY
            - ANUIDADE_DIFERENCIADA                                   # DIFFERENTIATED_ANNUITY
            - UTILIZACAO_CANAIS_ATENDIMENTO_RETIRADA_ESPECIE_BRASIL   # USE_OF_SERVICE_CHANNELS_CASH_WITHDRAWAL_BRAZIL
            - UTILIZACAO_CANAIS_ATENDIMENTO_RETIRADA_ESPECIE_EXTERIOR # USE_OF_SERVICE_CHANNELS_CASH_WITHDRAWAL_ABROAD
            - AVALIACAO_EMERGENCIAL_CREDITO                           # EMERGENCY_CREDIT_ASSESSMENT
            - FORNECIMENTO_SEGUNDA_VIA_FUNCAO_CREDITO                 # PROVISION_OF_DUPLICATE_CREDIT_FUNCTION
            - PAGAMENTO_CONTAS_UTILIZANDO_FUNCAO_CREDITO              # ACCOUNT_PAYMENT_USING_CREDIT_FUNCTION
            - SMS
          description: 'Denomination of Services related to the Post-Paid Payment Accounts Modality (See ENUM)'
          example: ANUIDADE_CARTAO_BASICO_NACIONAL
        code:
          type: string
          enum:
            - ANUIDADE_NACIONAL             # NATIONAL_ANNUITY
            - ANUIDADE_INTERNACIONAL        # INTERNATIONAL_ANNUITY
            - ANUIDADE_DIFERENCIADA         # DIFFERENTIATED_ANNUITY
            - SAQUE_CARTAO_BRASIL           # CARD_WITHDRAWAL_BRAZIL
            - SAQUE_CARTAO_EXTERIOR         # CARD_WITHDRAWAL_ABROAD
            - AVALIACAO_EMERGENCIAL_CREDITO # EMERGENCY_CREDIT_ASSESSMENT
            - EMISSAO_SEGUNDA_VIA           # DUPLICATE_ISSUANCE
            - TARIFA_PAGAMENTO_CONTAS       # ACCOUNT_PAYMENT_FEE
            - SMS
          description: 'Abbreviation of the Service identification related to the Post-Paid Payment Accounts Modality (See ENUM)'
          example: ANUIDADE_NACIONAL
        chargingTriggerInfo:
          type: string
          maxLength: 2000
          pattern: '^(?!\s)[\w\W\s]*[^\s]$'
          description: 'Charging trigger events that affect the Post-Paid Payment Accounts Modalities informed, for legal entities. (Free Field)'
          example: 'Availability of a network of affiliated establishments, installed in the Country, for payments of goods and services, charged at most once every twelve months, with the collection being allowed in installments'
        prices:
          type: array
          description: List price distribution of service fees
          items:
            $ref: '#/components/schemas/Price'
          minItems: 4
          maxItems: 4
        minimum:
          $ref: '#/components/schemas/MinimumPrice'
        maximum:
          $ref: '#/components/schemas/MaximumPrice'
    Price:
      type: object
      required:
        - interval
        - value
        - currency
        - customers
      x-regulatory-required:
        - interval
        - value
        - currency
        - customers
      properties:
        interval:
          $ref: '#/components/schemas/PriceIntervals'
        value:
          type: string
          pattern: '^(\d{1,9}\.\d{2}){1}$'
          minLength: 4
          maxLength: 12
          x-cds-type: AmountString
          description: |
            Median value of each range related to the service offered, informed in the period, according to Res nยบ 32 BCB, 2020. ex. '45.00' (represents a monetary value. ex: 1547368.92. This value, considering that the currency is BRL, means R\$ 1,547,368.92. The only separator present must be '.' (dot) to indicate the decimal place. There must be no thousands separator).

            Note: For the purpose of comparing product rates, participating institutions, when they do not charge fees, must send the value 0.00 signaling that for that rate there is no charge for the service.
          example: '2000.00'
        currency:
          $ref:  '#/components/schemas/Currency'
        customers:
          $ref: '#/components/schemas/Customer'
    MinimumPrice:
      type: object
      required:
        - value
        - currency
      x-regulatory-required:
        - value
        - currency
      properties:
        value:
          type: string
          pattern: '^(\d{1,9}\.\d{2}){1}$'
          minLength: 4
          maxLength: 12
          x-cds-type: AmountString
          description: |
            Minimum value calculated for the service fee on the customer base in the reference month.

            Note: For the purpose of comparing product rates, participating institutions, when they do not charge fees, must send the value 0.00 signaling that for that rate there is no charge for the service.
          example: '1350.00'
        currency:
          $ref:  "#/components/schemas/Currency"
    MaximumPrice:
      type: object
      required:
        - value
        - currency
      x-regulatory-required:
        - value
        - currency
      properties:
        value:
          type: string
          pattern: '^(\d{1,9}\.\d{2}){1}$'
          minLength: 4
          maxLength: 12
          x-cds-type: AmountString
          description: |
            Maximum value calculated for the service fee on the customer base in the reference month.

            Note: For the purpose of comparing product rates, participating institutions, when they do not charge fees, must send the value 0.00 signaling that for that rate there is no charge for the service.
          example: '8800.00'
        currency:
          $ref:  "#/components/schemas/Currency"
    Customer:
      type: object
      description: Relevant information for the customer.
      required:
        - rate
      x-regulatory-required:
        - rate
      properties:
        rate:
          type: string
          description: |
            Percentage of customers in each range.
          pattern: '^\d{1}\.\d{6}$'
          example: '0.150000'
          minLength: 8
          maxLength: 8
    Currency:
      type: string
      pattern: '^(\w{3}){1}$'
      minLength: 3
      maxLength: 3
      x-cds-type: CurrencyString
      description: 'Currency referring to the minimum value of the Tariff, according to ISO-4217 model'
      example: BRL
    InterestRate:
      type: object
      required:
        - referentialRateIndexer
        - rate
        - applications
        - minimumRate
        - maximumRate
      x-regulatory-required:
        - referentialRateIndexer
        - rate
        - minimumRate
        - maximumRate
      properties:
        referentialRateIndexer:
          $ref: '#/components/schemas/ReferentialRateIndexer'
        rate:
          type: string
          description: |
            Percentage that affects the composition of interest rates. (represents a percentage Ex: 0.15 (The value next to it represents 15%. The value '1' represents 100%). The calculation can happen with up to 4 decimal places. The filling must respect the 4 decimal places, even if they are filled with zeros (percentage representation, e.g.: 0.1500. This value represents 15%. The value 1 represents 100%)
          pattern: '^\d{1}\.\d{6}$'
          minLength: 8
          maxLength: 8
          example: '0.150000'
        applications:
          type: array
          description: List percentage distributions related to the interest rate
          items:
            $ref:   "#/components/schemas/ApplicationRate"
          minItems: 4
          maxItems: 4
        minimumRate:
          type: string
          pattern: '^\d{1}\.\d{6}$'
          description: 'Minimum percentage charged (effective rate) in the reference month, for the contracted Financing. The calculation can happen with up to 4 decimal places. The filling must respect the 4 decimal places, even if they are filled with zeros (percentage representation, e.g.: 0.1500. This value represents 15%. The value 1 represents 100%)'
          minLength: 8
          maxLength: 8
          example: '0.045600'
        maximumRate:
          type: string
          pattern: '^\d{1}\.\d{6}$'
          description: 'Maximum percentage charged (effective rate) in the reference month, for the contracted Financing. The calculation can happen with up to 4 decimal places. The filling must respect the 4 decimal places, even if they are filled with zeros (percentage representation, e.g.: 0.1500. This value represents 15%. The value 1 represents 100%)'
          minLength: 8
          maxLength: 8
          example: '0.686500'
    ReferentialRateIndexer:
      type: string
      description: |
        Types of reference rates or indexers, according to Annex 5: Reference Rate or Indexer (Indx), of Document 3040
      enum:
        - SEM_INDEXADOR_TAXA        # NO_RATE_INDEXER
        - PRE_FIXADO                # PRE_FIXED
        - POS_FIXADO_TR_TBF         # POST_FIXED_TR_TBF
        - POS_FIXADO_TJLP           # POST_FIXED_TJLP
        - POS_FIXADO_LIBOR          # POST_FIXED_LIBOR
        - POS_FIXADO_TLP            # POST_FIXED_TLP
        - OUTRAS_TAXAS_POS_FIXADAS  # OTHER_POST_FIXED_RATES
        - FLUTUANTES_CDI            # FLOATING_CDI
        - FLUTUANTES_SELIC          # FLOATING_SELIC
        - OUTRAS_TAXAS_FLUTUANTES   # OTHER_FLOATING_RATES
        - INDICES_PRECOS_IGPM       # PRICE_INDEXES_IGPM
        - INDICES_PRECOS_IPCA       # PRICE_INDEXES_IPCA
        - INDICES_PRECOS_IPCC       # PRICE_INDEXES_IPCC
        - OUTROS_INDICES_PRECO      # OTHER_PRICE_INDEXES
        - CREDITO_RURAL_TCR_PRE     # RURAL_CREDIT_TCR_PRE
        - CREDITO_RURAL_TCR_POS     # RURAL_CREDIT_TCR_POS
        - CREDITO_RURAL_TRFC_PRE    # RURAL_CREDIT_TRFC_PRE
        - CREDITO_RURAL_TRFC_POS    # RURAL_CREDIT_TRFC_POS
        - OUTROS_INDEXADORES        # OTHER_INDEXERS
      example: 'SEM_INDEXADOR_TAXA'
    Links:
      type: object
      description: References to other resources of the requested API.
      properties:
        self:
          type: string
          format: url
          minLength: 5
          maxLength: 2000
          description: URL of the currently requested page
          example: 'https://api.banco.com.br/open-banking/opendata-creditcards/v1/resource'
        first:
          type: string
          format: url
          minLength: 5
          maxLength: 2000
          description: URL of the first page of records
          example: 'https://api.banco.com.br/open-banking/opendata-creditcards/v1/resource'
        prev:
          type: string
          format: url
          minLength: 5
          maxLength: 2000
          description: URL of the previous page of records
          example: 'https://api.banco.com.br/open-banking/opendata-creditcards/v1/resource'
        next:
          type: string
          format: url
          minLength: 5
          maxLength: 2000
          description: URL of the next page of records
          example: 'https://api.banco.com.br/open-banking/opendata-creditcards/v1/resource'
        last:
          type: string
          format: url
          minLength: 5
          maxLength: 2000
          description: URL of the last page of records
          example: 'https://api.banco.com.br/open-banking/opendata-creditcards/v1/resource'
    Meta:
      type: object
      description: Meta information regarding the requested API.
      properties:
        totalRecords:
          type: integer
          description: Total records found
          example: 1
        totalPages:
          type: integer
          description: Total pages for the records found
          example: 1
      required:
        - totalRecords
        - totalPages
    ResponseErrorMetaSingle:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          minItems: 1
          maxItems: 13
          items:
            type: object
            required:
              - code
              - title
              - detail
            properties:
              code:
                description: Endpoint specific error code
                type: string
                pattern: '^(?!\s)[\w\W\s]*[^\s]$'
                maxLength: 255
              title:
                description: Human-readable title for this specific error
                type: string
                pattern: '^(?!\s)[\w\W\s]*[^\s]$'
                maxLength: 255
              detail:
                description: Human-readable description of this specific error
                type: string
                pattern: '^(?!\s)[\w\W\s]*[^\s]$'
                maxLength: 2048
        meta:
          type: object
          description: Meta information regarding the requested API.
          required:
            - requestDateTime
          properties:
            requestDateTime:
              description: 'Date and time of the query, as per RFC-3339 specification, UTC format.'
              type: string
              maxLength: 20
              format: date-time
              example: '2021-05-21T08:30:00Z'
    ResponseError:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          minItems: 1
          maxItems: 13
          items:
            type: object
            required:
              - code
              - title
              - detail
            properties:
              code:
                description: Endpoint specific error code
                type: string
                pattern: '^(?!\s)[\w\W\s]*[^\s]$'
                maxLength: 255
              title:
                description: Human-readable title for this specific error
                type: string
                pattern: '^(?!\s)[\w\W\s]*[^\s]$'
                maxLength: 255
              detail:
                description: Human-readable description of this specific error
                type: string
                pattern: '^(?!\s)[\w\W\s]*[^\s]$'
                maxLength: 2048
        meta:
          type: object
          description: Meta information regarding the requested API.
          required:
            - requestDateTime
          properties:
            requestDateTime:
              description: Date and time of the query, as per RFC-3339 specification, UTC format.
              type: string
              format: date-time
              minLength: 20
              maxLength: 20
              pattern: '^[2-9]\d{3}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z$'
              example: '2023-10-09T14:10:00Z'
  securitySchemes:
    APIKey1:
      name: API Key
      type: apiKey
      in: query
    APIKey2:
      name: API Key
      type: apiKey
      in: query
  parameters:
    page:
      name: page
      in: query
      description: Page number that is being requested (the value of the first page is 1).
      schema:
        type: integer
        format: int32
        default: 1
        minimum: 1
        maximum: 2147483647
    pageSize:
      name: page-size
      in: query
      description: Total number of records per page.
      schema:
        type: integer
        format: int32
        default: 25
        minimum: 1
        maximum: 1000
  responses:
    BadRequest:
      description: The request was malformed, omitting mandatory attributes, either in the payload or through attributes in the URL.
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    NotFound:
      description: The requested resource does not exist or has not been implemented.
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    MethodNotAllowed:
      description: The consumer tried to access the resource with an unsupported method.
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    TooManyRequests:
      description: The operation was refused because too many requests were made within a certain period or the global limit of concurrent requests was reached.
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    InternalServerError:
      description: An error occurred in the API gateway or microservice.
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    GatewayTimeout:
      description: GATEWAY TIMEOUT - The request was not answered within the established timeout.
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    SiteIsOverloaded:
      description: The site is overloaded and the operation was refused because the maximum global TPS limit was reached at this time.
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseErrorMetaSingle'
    Default:
      description: '\-'
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
