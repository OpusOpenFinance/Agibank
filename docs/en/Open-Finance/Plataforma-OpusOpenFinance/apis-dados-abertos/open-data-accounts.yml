openapi: 3.0.0
info:
  title: Open Finance Brasil OpenData Accounts API
  description: The API described in this document refers to the Accounts API of the OpenData phase of Open Finance Brasil.
  version: 1.0.1
  license:
    name: Apache 2.0
    url: "https://www.apache.org/licenses/LICENSE-2.0"
tags:
  - name: Accounts
    description: Operations for listing accounts.
paths:
  /personal-accounts:
    get:
      tags:
        - Accounts
      summary: Get personal accounts data
      description: Get personal accounts data
      operationId: getPersonalAccounts
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/pageSize"
      responses:
        '200':
          description: Data about personal accounts successfully obtained.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsePersonalAccounts'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
        '529':
          $ref: '#/components/responses/SiteIsOverloaded'
        default:
          $ref: '#/components/responses/Default'
  /business-accounts:
    get:
      tags:
        - Accounts
      summary: Get business accounts data
      description: Get business accounts data
      operationId: getBusinessAccounts
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/pageSize"
      responses:
        '200':
          description: Data about business accounts successfully obtained.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBusinessAccounts'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
        '529':
          $ref: '#/components/responses/SiteIsOverloaded'
        default:
          $ref: '#/components/responses/Default'
components:
  schemas:
    AccountsTermsConditions:
      type: object
      description: Object that gathers information regarding Terms and Conditions for the treated modalities
      required:
        - minimumBalance
        - elegibilityCriteriaInfo
        - closingProcessInfo
      x-regulatory-required:
        - minimumBalance
        - elegibilityCriteriaInfo
        - closingProcessInfo
      properties:
        minimumBalance:
          $ref: '#/components/schemas/MinimumBalance'
        elegibilityCriteriaInfo:
          type: string
          maxLength: 2000
          pattern: '^(?!\s)[\w\W\s]*[^\s]$'
          description: 'Customer qualification criteria in order to define their eligibility for acquiring the account type. Open Field'
          example: 'https://example.com/mobile-banking'
        closingProcessInfo:
          type: string
          maxLength: 2000
          pattern: '^(?!\s)[\w\W\s]*[^\s]$'
          description: 'Closing procedures for the treated account type. Possibility of URL inscription. Electronic address for channel access. e.g. ''https://example.com/mobile-banking'' '
          example: 'https://example.com/mobile-banking'
    ResponsePersonalAccounts:
      type: object
      required:
        - data
        - links
        - meta
      properties:
        data:
          type: array
          minItems: 1
          description: Set of information referring to the Accounts product.
          items:
            $ref: '#/components/schemas/PersonalData'
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Meta'
    PersonalData:
      type: object
      required:
        - participant
        - type
        - openingClosingChannels
        - transactionMethods
        - termsConditions
      x-regulatory-required:
        - type
        - fees
        - openingClosingChannels
        - openingClosingChannelsAdditionalInfo
        - transactionMethods
      properties:
        participant:
          type: object
          description: Set of information regarding the Open Finance participant that offers this product.
          required:
            - brand
            - name
            - cnpjNumber
          x-regulatory-required:
            - brand
            - name
            - cnpjNumber
            - urlComplementaryList
          properties:
            brand:
              type: string
              maxLength: 80
              pattern: '^(?!\s)[\w\W\s]*[^\s]$'
              description: 'Brand Name reported by the Open Finance participant. The concept referred to by ''brand'' is essentially a company promise to provide a specific series of uniform attributes, benefits, and services to customers'
              example: Organização A # Organization A
            name:
              type: string
              description: Name of the Institution, belonging to the brand, responsible for the Loans modality. e.g.'Company of Organization A'
              maxLength: 80
              pattern: '^(?!\s)[\w\W\s]*[^\s]$'
              example: 'Empresa A1' # Company A1
            cnpjNumber:
              type: string
              pattern: '^\d{14}$'
              minLength: 14
              maxLength: 14
              description: CNPJ
              example: "50685362000135"
            urlComplementaryList:
              type: string
              pattern: '^(?!\s)[\w\W\s]*[^\s]$'
              maxLength: 1024
              description: |
                URL of the link that will contain the complementary list with the names and CNPJs grouped under the same cnpjNumber. Those contained in this list have the same characteristics for products and services. Electronic address for channel access. It will be mandatory to fill in if there is a complementary list with the names and CNPJs to be made available.
                Restriction: It will be mandatory to fill in if there is a complementary list with names and CNPJs to be made available
              example: 'https://empresadaorganizacaoa.com/complementarylist' # https://companyoforganizationa.com/complementarylist
        type:
          $ref: '#/components/schemas/AccountType'
        fees:
          $ref: '#/components/schemas/AccountFee'
        serviceBundles:
          type: array
          items:
            $ref: '#/components/schemas/ServiceBundle'
          minItems: 1
          maxItems: 200
          description: |
            List of account service packages with essential services standardized and regulated by BC Resolution 3919 of 11/25/2010

            [Restriction]
            - Mandatory when "type" is equal to "CONTA_DEPOSITO_A_VISTA" (current account) or "CONTA_POUPANCA", because today there are packages that can be charged different from essential services (which are not charged);

            - Optional when "type" is equal to "CONTA_PAGAMENTO_PRE_PAGA" being conditional if the institution has a service package linked to this type of account.
        openingClosingChannels:
          type: array
          items:
            $ref: '#/components/schemas/OpeningClosingChannels'
          minItems: 1
          maxItems: 7
          description: List of channels for opening and closing
        openingClosingChannelsAdditionalInfo:
          type: string
          maxLength: 140
          pattern: '^(?!\s)[\w\W\s]*[^\s]$'
          description: |
            Free field for filling in additional information regarding "openingClosingChannels".

            [Restriction] Mandatory when "openingClosingChannels" is equal to 'OUTROS'. # OTHERS
          example: Informações adicionais  # Additional Information
        transactionMethods:
          type: array
          items:
            $ref: '#/components/schemas/TransactionMethods'
          minItems: 1
          maxItems: 4
          description: List of transaction methods
        termsConditions:
          $ref: '#/components/schemas/AccountsTermsConditions'
        incomeRate:
          $ref: '#/components/schemas/AccountsIncomeRate'
    AccountFee:
      type: object
      description: Object that gathers service fee information.
      x-regulatory-required:
        - priorityServices
      properties:
        priorityServices:
          type: array
          items:
            $ref: '#/components/schemas/AccountPriorityService'
          minItems: 1
          maxItems: 40
          description: |
            List of fees charged on priority services.

            [Restriction] Mandatory when "type" is equal to "CONTA_DEPOSITO_A_VISTA" or "CONTA_POUPANCA"
        otherServices:
          type: array
          items:
            $ref: '#/components/schemas/AccountOtherService'
          minItems: 1
          maxItems: 100
          description: List of fees charged on other Services, which are not priority
    AccountPriorityService:
      type: object
      required:
        - name
        - code
        - chargingTriggerInfo
        - prices
        - minimum
        - maximum
      x-regulatory-required:
        - name
        - code
        - chargingTriggerInfo
        - prices
        - minimum
        - maximum
      properties:
        name:
          $ref: '#/components/schemas/PriorityServiceName'
        code:
          $ref: '#/components/schemas/AccountPriorityServiceCode'
        chargingTriggerInfo:
          type: string
          maxLength: 2000
          pattern: '^(?!\s)[\w\W\s]*[^\s]$'
          description: 'Charging trigger events that affect priority services, according to Bacen Resolution 3.919, for individuals.'
          example: 'Provision of statement with the movement of a period at a cashier or by other forms of personal service, such as telephone service performed by an attendant.'
        prices:
          type: array
          items:
            $ref: '#/components/schemas/PersonalAccountPriorityServicePrice'
          minItems: 4
          maxItems: 4
          description: Price distribution list of service fees
        minimum:
          $ref: '#/components/schemas/PriorityServiceMinimumPrice'
        maximum:
          $ref:  "#/components/schemas/PriorityServiceMaximumPrice"
    AccountType:
      type: string
      enum:
        - CONTA_DEPOSITO_A_VISTA # Current account
        - CONTA_POUPANCA # Savings account
        - CONTA_PAGAMENTO_PRE_PAGA # Prepaid payment account
      description: |
        Types of accounts offered to individuals or legal entities, e.g. 'CONTA_DEPOSITO_A_VISTA'.
        Current account - is the most common type. In it, the money is available for withdrawal at any time. This account does not generate income for the depositor
        Savings account - was created to encourage people to save. Money that remains in the account for thirty days starts to generate income, with income tax exemption for those who declare. That is, the money "grows" (yields) while it is kept in the account. Each deposit will have monthly income, always on the day of the month in which the money was deposited
        Prepaid payment account: according to CIRCULAR No. 3,680, BCB of 2013, it is 'intended for the execution of payment transactions in electronic currency carried out based on funds denominated in reais previously contributed'
      example: CONTA_DEPOSITO_A_VISTA # Current account
    OpeningClosingChannels:
      type: string
      enum:
        - DEPENDENCIAS_PROPRIAS # Own branches
        - CORRESPONDENTES_BANCARIOS # Banking correspondents
        - INTERNET_BANKING
        - MOBILE_BANKING
        - CENTRAL_TELEFONICA # Telephone center
        - CHAT
        - OUTROS # Others
      description: Channels available for opening and closing accounts, e.g. 'DEPENDENCIAS_PROPRIAS' # Own branches
      example: DEPENDENCIAS_PROPRIAS # Own branches
    TransactionMethods:
      type: string
      enum:
        - MOVIMENTACAO_ELETRONICA # Electronic transaction
        - MOVIMENTACAO_CHEQUE     # Check transaction
        - MOVIMENTACAO_CARTAO     # Card transaction
        - MOVIMENTACAO_PRESENCIAL # In-person transaction
      description: List of possible transaction methods for the account
      example: MOVIMENTACAO_CARTAO # Card transaction
    PriorityServiceName:
      type: string
      enum:
        - CONFECCAO_CADASTRO_INICIO_RELACIONAMENTO # Preparation of registration start of relationship
        - FORNECIMENTO_2_VIA_CARTAO_FUNCAO_DEBITO # Provision of 2nd copy of debit function card
        - FORNECIMENTO_2_VIA_CARTAO_FUNCAO_MOVIMENTACAO_CONTA_POUPANCA # Provision of 2nd copy of card with savings account transaction function
        - EXCLUSAO_CADASTRO_EMITENTES_CHEQUES_SEM_FUNDO_CCF # Exclusion from register of issuers of NSF checks CCF
        - CONTRA_ORDEM_REVOGACAO_E_OPOSICAO_OU_SUSTACAO_PAGAMENTO_CHEQUE # Counter order revocation and opposition or suspension of check payment
        - FORNECIMENTO_FOLHAS_CHEQUE # /Provision of check leaves
        - CHEQUE_ADMINISTRATIVO # Manager's check
        - CHEQUE_VISADO # Certified check
        - SAQUE_CONTA_DEPOSITO_A_VISTA_POUPANCA_PRESENCIAL_OU_PESSOAL # Withdrawal from demand deposit account savings account in person or personal
        - SAQUE_CONTA_DEPOSITO_A_VISTA_POUPANCA_TERMINAL_AUTOATENDIMENTO # Withdrawal from demand deposit account savings account ATM
        - SAQUE_CONTA_DEPOSITO_A_VISTA_POUPANCA_CORRESPONDENTES_PAIS # Withdrawal from demand deposit account savings account banking correspondents in the country
        - DEPOSITO_IDENTIFICADO # Identified deposit
        - FORNECIMENTO_EXTRATO_MENSAL_CONTA_DEPOSITOS_A_VISTA_E_POUPANCA_PRESENCIAL_OU_PESSOAL # Provision of monthly statement of demand deposit and savings account in person or personal
        - FORNECIMENTO_EXTRATO_MENSAL_CONTA_DEPOSITOS_A_VISTA_E_POUPANCA_TERMINAL_AUTOATENDIMENTO # Provision of monthly statement of demand deposit and savings account ATM
        - FORNECIMENTO_EXTRATO_MENSAL_CONTA_DEPOSITOS_A_VISTA_E_POUPANCA_CORRESPONDENTES_PAIS # Provision of monthly statement of demand deposit and savings account banking correspondents in the country
        - FORNECIMENTO_EXTRATO_DE_UM_PERIODO_CONTA_DEPOSITOS_A_VISTA_E_POUPANCA_PRESENCIAL_OU_PESSOAL # Provision of statement for a period of demand deposit and savings account in person or personal
        - FORNECIMENTO_EXTRATO_DE_UM_PERIODO_CONTA_DEPOSITOS_A_VISTA_E_POUPANCA_TERMINAL_AUTOATENDIMENTO # Provision of statement for a period of demand deposit and savings account ATM
        - FORNECIMENTO_EXTRATO_DE_UM_PERIODO_CONTA_DEPOSITOS_A_VISTA_E_POUPANCA_CORRESPONDENTES_PAIS # Provision of statement for a period of demand deposit and savings account banking correspondents in the country
        - FORNECIMENTO_COPIA_MICROFILME_MICROFICHA_ASSEMELHADO # Provision of microfilm microfiche or similar copy
        - TRANSFERENCIA_DOC_PESSOAL_OU_PRESENCIAL # DOC transfer in person or personal
        - TRANSFERENCIA_DOC_TERMINAL_AUTOATENDIMENTO_OUTROS_MEIOS_ELETRONICOS # DOC transfer ATM other electronic means
        - TRANSFERENCIA_DOC_INTERNET # DOC transfer internet
        - TRANSFERENCIA_TED_PESSOAL_OU_PRESENCIAL # TED transfer in person or personal
        - TRANSFERENCIA_TED_TERMINAL_AUTOATENDIMENTO_OUTROS_MEIOS_ELETRONICOS # TED transfer ATM other electronic means
        - TRANSFERENCIA_TED_INTERNET # TED transfer internet
        - TRANSFERENCIA_DOC_TED_PESSOAL_OU_PRESENCIAL # DOC/TED transfer in person or personal
        - TRANSFERENCIA_DOC_TED_TERMINAL_AUTOATENDIMENTO_OUTROS_MEIOS_ELETRONICOS # DOC/TED transfer ATM other electronic means
        - TRANSFERENCIA_DOC_TED_INTERNET # DOC/TED transfer internet
        - TRANSFERENCIA_ENTRE_CONTAS_PROPRIA_INSTITUICAO_PESSOAL_OU_PRESENCIAL # Transfer between own institution accounts in person or personal
        - TRANSFERENCIA_ENTRE_CONTAS_PROPRIA_INSTITUICAO_TERMINAL_AUTOATENDIMENTO_OUTROS_MEIOS_ELETRONICOS_INCLUSIVE_INTERNET # Transfer between own institution accounts ATM other electronic means including internet
        - ORDEM_PAGAMENTO # Payment order
        - ANUIDADE_CARTAO_BASICO_NACIONAL # Basic national card annuity
        - ANUIDADE_CARTAO_BASICO_INTERNACIONAL # Basic international card annuity
        - ANUIDADE_DIFERENCIADA # Differentiated annuity
        - UTILIZACAO_CANAIS_ATENDIMENTO_RETIRADA_ESPECIE_BRASIL # Use of service channels cash withdrawal Brazil
        - UTILIZACAO_CANAIS_ATENDIMENTO_RETIRADA_ESPECIE_EXTERIOR # Use of service channels cash withdrawal abroad
        - AVALIACAO_EMERGENCIAL_CREDITO # Emergency credit assessment
        - FORNECIMENTO_SEGUNDA_VIA_FUNCAO_CREDITO # Provision of second copy credit function
        - PAGAMENTO_CONTAS_UTILIZANDO_FUNCAO_CREDITO # Bill payment using credit function
        - SMS
      description: 'Name of Priority Services, according to Bacen Resolution 3.919, for individuals.'
      example: TRANSFERENCIA_TED_PESSOAL_OU_PRESENCIAL # TED transfer in person or personal
    AccountOtherService:
      type: object
      required:
        - name
        - code
        - chargingTriggerInfo
        - prices
        - minimum
        - maximum
      x-regulatory-required:
        - name
        - code
        - chargingTriggerInfo
        - prices
        - minimum
        - maximum
      properties:
        name:
          type: string
          maxLength: 250
          pattern: '^(?!\s)[\w\W\s]*[^\s]$'
          description: 'Service Name that affects account type (Free Field)'
          example: Evento personalizado # Personalized event
        code:
          type: string
          maxLength: 100
          pattern: '^(?!\s)[\w\W\s]*[^\s]$'
          description: 'Identification acronyms of the Service (Free Field)'
          example: TALAO_DOMICILIO # CHECKBOOK_HOME
        chargingTriggerInfo:
          type: string
          maxLength: 2000
          pattern: '^(?!\s)[\w\W\s]*[^\s]$'
          description: Charging trigger events that affect other services for individuals. (Free Field)
          example: 'Charge due to personalized event'
        prices:
          type: array
          items:
            $ref: "#/components/schemas/Price"
          minItems: 4
          maxItems: 4
          description: Price distribution list of service fees
        minimum:
          $ref: "#/components/schemas/MinimumPrice"
        maximum:
          $ref: "#/components/schemas/MaximumPrice"
    AccountPriorityServiceCode:
      type: string
      description: 'List of acronyms identifying the Priority Service, according to Bacen Resolution 3.919.'
      example: TARIFA_PAGAMENTO_CONTAS # BILL_PAYMENT_FEE
      enum:
        - CADASTRO                      # REGISTRATION
        - 2_VIA_CARTAO_DEBITO           # 2ND_COPY_DEBIT_CARD
        - 2_VIA_CARTAO_POUPANCA         # 2ND_COPY_SAVINGS_CARD
        - EXCLUSAO_CCF                  # CCF_EXCLUSION
        - SUSTACAO_REVOGACAO            # SUSPENSION_REVOCATION
        - FOLHA_CHEQUE                  # CHECK_LEAF
        - CHEQUE_ADMINISTRATIVO         # MANAGERS_CHECK
        - CHEQUE_VISADO                 # CERTIFIED_CHECK
        - SAQUE_PESSOAL                 # PERSONAL_WITHDRAWAL
        - SAQUE_TERMINAL                # ATM_WITHDRAWAL
        - SAQUE_CORRESPONDENTE          # CORRESPONDENT_WITHDRAWAL
        - DEPOSITO_IDENTIFICADO         # IDENTIFIED_DEPOSIT
        - EXTRATO_MES_P                 # MONTHLY_STATEMENT_P
        - EXTRATO_MES_E                 # MONTHLY_STATEMENT_E
        - EXTRATO_MES_C                 # MONTHLY_STATEMENT_C
        - EXTRATO_MOVIMENTO_P           # MOVEMENT_STATEMENT_P
        - EXTRATO_MOVIMENTO_E           # MOVEMENT_STATEMENT_E
        - EXTRATO_MOVIMENTO_C           # MOVEMENT_STATEMENT_C
        - MICROFILME                    # MICROFILM
        - DOC_PESSOAL                   # PERSONAL_DOC
        - DOC_ELETRONICO                # ELECTRONIC_DOC
        - DOC_INTERNET                  # INTERNET_DOC
        - TED_PESSOAL                   # PERSONAL_TED
        - TED_ELETRONICO                # ELECTRONIC_TED
        - TED_INTERNET                  # INTERNET_TED
        - DOC_TED_AGENDADO_P            # SCHEDULED_DOC_TED_P
        - DOC_TED_AGENDADO_E            # SCHEDULED_DOC_TED_E
        - DOC_TED_AGENDADO_I            # SCHEDULED_DOC_TED_I
        - TRANSF_RECURSO_P              # RESOURCE_TRANSFER_P
        - TRANSF_RECURSO_E              # RESOURCE_TRANSFER_E
        - ORDEM_PAGAMENTO               # PAYMENT_ORDER
        - ANUIDADE_NACIONAL             # NATIONAL_ANNUITY
        - ANUIDADE_INTERNACIONAL        # INTERNATIONAL_ANNUITY
        - ANUIDADE_DIFERENCIADA         # DIFFERENTIATED_ANNUITY
        - SAQUE_CARTAO_BRASIL           # CARD_WITHDRAWAL_BRAZIL
        - SAQUE_CARTAO_EXTERIOR         # CARD_WITHDRAWAL_ABROAD
        - AVALIACAO_EMERGENCIAL_CREDITO # EMERGENCY_CREDIT_ASSESSMENT
        - EMISSAO_SEGUNDA_VIA           # 2ND_COPY_ISSUANCE
        - TARIFA_PAGAMENTO_CONTAS       # BILL_PAYMENT_FEE
        - SMS
    ServiceBundle:
      type: object
      required:
        - name
        - services
        - prices
        - minimum
        - maximum
      x-regulatory-required:
        - name
      properties:
        name:
          type: string
          maxLength: 250
          pattern: '^(?!\s)[\w\W\s]*[^\s]$'
          description: Service Package Name given by the institution.
          example: Conta de depósitos à vista Movimentação com cartão (sem cheque) # Demand deposit account Card transaction (without check)
        services:
          type: array
          minItems: 1
          maxItems: 100
          items:
            $ref: '#/components/schemas/ServiceBundleServiceDetail'
          description: List of services that make up the service package
        prices:
          type: array
          items:
            $ref: "#/components/schemas/MonthlyPrice"
          minItems: 4
          maxItems: 4
          description: Price distribution list of service fees
        minimum:
          $ref:  "#/components/schemas/MinimumPrice"
        maximum:
          $ref:  "#/components/schemas/MaximumPrice"
    ServiceBundleServiceDetail:
      type: object
      required:
        - code
        - chargingTriggerInfo
        - eventLimitQuantity
        - freeEventQuantity
      x-regulatory-required:
        - code
        - chargingTriggerInfo
        - eventLimitQuantity
        - freeEventQuantity
      properties:
        code:
          type: string
          maxLength: 100
          pattern: '^(?!\s)[\w\W\s]*[^\s]$'
          description: |
            Code that identifies the Service that makes up the Service Package, which may be from the list of Priority Services or Other Services. e.g. according to Bacen Resolution 3.919: 'SAQUE_TERMINAL'. # ATM_WITHDRAWAL
          example: SAQUE_TERMINAL # ATM_WITHDRAWAL
        chargingTriggerInfo:
          type: string
          maxLength: 2000
          pattern: '^(?!\s)[\w\W\s]*[^\s]$'
          description: |
            Charging trigger events that affect the service that makes up the Service Package.
          example: 'Conducting research in credit protection services, databases and registration information, and processing data and information necessary for the start of a relationship arising from the opening of a demand deposit or savings account or contracting a credit or leasing operation, and cannot be charged cumulatively'
        eventLimitQuantity:
          type: string
          pattern: ^(\d{1,6}){1}$
          minLength: 1
          maxLength: 6
          description: |
            According to Resolution 4196, BCB, of 2013: Quantity of events provided for in the Service Package (Number of events included in the month) e.g.'2'. In case of unlimited quantity, report 999999
          example: '2'
        freeEventQuantity:
          type: string
          pattern: ^(\d{1,6}){1}$
          minLength: 1
          maxLength: 6
          description: |
            According to Resolution 4196, BCB, of 2013: Quantity of events provided for in the Service Package with Fee exemption. e.g.'1' In case of unlimited quantity, report 999999
          example: '1'
    AccountsIncomeRate:
      type: object
      x-regulatory-required:
        - savingAccount
        - prepaidPaymentAccount
      properties:
        savingAccount:
          type: string
          maxLength: 2000
          pattern: '^(?!\s)[\w\W\s]*[^\s]$'
          example: Remuneração trimestral de x% + TR conforme determinação legal vigente​ # Quarterly remuneration of x% + TR as per current legal determination. TR is the Brazilian Base Interest Rate.
          description: |
            Description of Remuneration specifically for Savings Account. Must be filled in with the current legal determination.

            [Restriction] Mandatory when "type" is equal to "CONTA_POUPANCA".
        prepaidPaymentAccount:
          type: string
          maxLength: 2000
          pattern: '^(?!\s)[\w\W\s]*[^\s]$'
          description: Free Field. Must explicitly state the Percentage in favor of the prepaid payment account holder.
          example: '40% Rendimento a.m.' # 40% Yield p.m.
    ResponseBusinessAccounts:
      type: object
      required:
        - data
        - links
        - meta
      properties:
        data:
          type: array
          minItems: 1
          description: Set of information referring to the Accounts product.
          items:
            $ref: '#/components/schemas/BusinessData'
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Meta'
    BusinessData:
      type: object
      required:
        - participant
        - type
        - fees
        - openingClosingChannels
        - transactionMethods
        - termsConditions
      x-regulatory-required:
        - type
        - openingClosingChannels
        - openingClosingChannelsAdditionalInfo
        - transactionMethods
      properties:
        participant:
          type: object
          description: Set of information regarding the Open Finance participant that offers this product.
          required:
            - brand
            - name
            - cnpjNumber
          x-regulatory-required:
            - brand
            - name
            - cnpjNumber
            - urlComplementaryList
          properties:
            brand:
              type: string
              maxLength: 80
              pattern: '^(?!\s)[\w\W\s]*[^\s]$'
              description: 'Brand Name reported by the Open Finance participant. The concept referred to by ''brand'' is essentially a company promise to provide a specific series of uniform attributes, benefits, and services to customers'
              example: Organização A # Organization A
            name:
              type: string
              description: Name of the Institution, belonging to the brand, responsible for the Loans modality. e.g.'Company of Organization A'
              maxLength: 80
              pattern: '^(?!\s)[\w\W\s]*[^\s]$'
              example: 'Empresa A1' # Company A1
            cnpjNumber:
              type: string
              pattern: '^\d{14}$'
              minLength: 14
              maxLength: 14
              description: CNPJ
              example: "50685362000135"
            urlComplementaryList:
              type: string
              pattern: '^(?!\s)[\w\W\s]*[^\s]$'
              maxLength: 1024
              description: |
                URL of the link that will contain the complementary list with the names and CNPJs grouped under the same cnpjNumber. Those contained in this list have the same characteristics for products and services. Electronic address for channel access. It will be mandatory to fill in if there is a complementary list with names and CNPJs to be made available.
                Restriction: It will be mandatory to fill in if there is a complementary list with names and CNPJs to be made available
              example: 'https://empresadaorganizacaoa.com/complementarylist' # https://companyoforganizationa.com/complementarylist
        type:
          $ref:  "#/components/schemas/AccountType"
        fees:
          type: object
          description: Object that gathers service fee information.
          required:
            - services
          properties:
            services:
              type: array
              maxItems: 200
              items:
                $ref: '#/components/schemas/BusinessAccountsService'
              minItems: 1
              description: List of fees charged on Services
        serviceBundles:
          type: array
          maxItems: 100
          items:
            $ref:  "#/components/schemas/ServiceBundle"
          minItems: 1
          description: |
            List of account service packages with essential services standardized and regulated by BC Resolution 3919 of 11/25/2010

            [Restriction]
            - Mandatory when "type" is equal to "CONTA_DEPOSITO_A_VISTA" (current account) or "CONTA_POUPANCA", because today there are packages that can be charged different from essential services (which are not charged);

            - Optional when "type" is equal to "CONTA_PAGAMENTO_PRE_PAGA" being conditional if the institution has a service package linked to this type of account.
        openingClosingChannels:
          type: array
          items:
            $ref: '#/components/schemas/OpeningClosingChannels'
          minItems: 1
          maxItems: 7
          description: List of channels for opening and closing
        openingClosingChannelsAdditionalInfo:
          type: string
          maxLength: 140
          pattern: '^(?!\s)[\w\W\s]*[^\s]$'
          description: |
            Free field for filling in additional information regarding "openingClosingChannels".

            [Restriction] Mandatory when "openingClosingChannels" is equal to 'OUTROS'. # OTHERS
          example: Informações adicionais  # Additional Information
        transactionMethods:
          type: array
          items:
            $ref: '#/components/schemas/TransactionMethods'
          minItems: 1
          maxItems: 4
          description: List of transaction methods
        termsConditions:
          $ref: '#/components/schemas/AccountsTermsConditions'
        incomeRate:
          $ref: '#/components/schemas/AccountsIncomeRate'
    BusinessAccountsService:
      type: object
      required:
        - name
        - code
        - chargingTriggerInfo
        - prices
        - minimum
        - maximum
      x-regulatory-required:
        - name
        - code
        - chargingTriggerInfo
        - prices
        - minimum
        - maximum
      properties:
        name:
          type: string
          maxLength: 250
          pattern: '^(?!\s)[\w\W\s]*[^\s]$'
          description: 'Service Name that affects the type of account selected for legal entities (Free Field)'
          example: Evento personalizado # Personalized event
        code:
          type: string
          maxLength: 100
          pattern: '^(?!\s)[\w\W\s]*[^\s]$'
          description: Acronym identifying Other Services that affect the informed account types.
          example: EVENTO_PERSONALIZADO # PERSONALIZED_EVENT
        chargingTriggerInfo:
          type: string
          maxLength: 2000
          pattern: '^(?!\s)[\w\W\s]*[^\s]$'
          description: Charging trigger events that affect the service that makes up the Service Package.
          example: 'Charge due to personalized event'
        prices:
          type: array
          items:
            $ref: '#/components/schemas/Price'
          minItems: 4
          maxItems: 4
          description: Price distribution list of service fees
        minimum:
          $ref: '#/components/schemas/MinimumPrice'
        maximum:
          $ref: '#/components/schemas/MaximumPrice'
    PriceIntervals:
      type: string
      enum:
        - 1_FAIXA # 1ST_RANGE
        - 2_FAIXA # 2ND_RANGE
        - 3_FAIXA # 3RD_RANGE
        - 4_FAIXA # 4TH_RANGE
      description: |
        According to Normative Instruction No. 32, BCB, of 2020: Distribution of relative frequency of fee values charged from customers, referred to in § 2 of art. 3 of Circular No. 4,015, of 2020, must be based on four ranges of equal size, with explanation of the values above the median in each of these ranges. Reporting: 1st range, 2nd range, 3rd range and 4th range
      example: 1_FAIXA # 1ST_RANGE
    Price:
      type: object
      required:
        - interval
        - value
        - currency
        - customers
      x-regulatory-required:
        - interval
        - value
        - currency
        - customers
      properties:
        interval:
          $ref: '#/components/schemas/PriceIntervals'
        value:
          type: string
          pattern: '^(\d{1,9}\.\d{2}){1}$'
          minLength: 4
          maxLength: 12
          x-cds-type: AmountString
          description: |
            Median value of each range related to the offered service, reported in the period, according to Resolution No. 32 BCB, 2020. e.g. '45.00'
            (represents a monetary value. e.g.: 1547368.92. This value, considering that the currency is BRL, means R\$ 1,547,368.92.
            The only separator present must be '.' (dot) to indicate the decimal place. There must be no thousands separator).

            Note: For the purpose of comparing product rates, participating institutions, when they do not charge fees,
            must send the value 0.00 signaling that for that rate there is no charge for the service.
          example: '2000.00'
        currency:
          $ref:  '#/components/schemas/Currency'
        customers:
          $ref: '#/components/schemas/Customer'
    PersonalAccountPriorityServicePrice:
      type: object
      required:
        - interval
        - value
        - currency
        - customers
      x-regulatory-required:
        - interval
        - value
        - currency
        - customers
      properties:
        interval:
          $ref: '#/components/schemas/PriceIntervals'
        value:
          type: string
          pattern: '^(\d{1,9}\.\d{2}){1}$'
          minLength: 4
          maxLength: 12
          x-cds-type: AmountString
          description: |
            Median value of each range related to the offered service, reported in the period, according to Resolution No. 32 BCB, 2020. e.g. '45.00' (represents a monetary value. e.g.: 1547368.92. This value, considering that the currency is BRL, means R\$ 1,547,368.92. The only separator present must be '.' (dot) to indicate the decimal place. There must be no thousands separator)
          example: '2000.00'
        currency:
          $ref:  '#/components/schemas/Currency'
        customers:
          $ref: '#/components/schemas/Customer'
    MonthlyPrice:
      type: object
      required:
        - interval
        - monthlyFee
        - currency
        - customers
      x-regulatory-required:
        - interval
        - monthlyFee
        - currency
        - customers
      properties:
        interval:
          $ref: '#/components/schemas/PriceIntervals'
        monthlyFee:
          type: string
          pattern: '^(\d{1,9}\.\d{2}){1}$'
          minLength: 4
          maxLength: 12
          x-cds-type: AmountString
          description: |
            Median value of each range related to the offered service, reported in the period, according to Resolution No. 32 BCB, 2020. e.g. ''45.00''
            (represents a monetary value. e.g.: 1547368.92. This value, considering that the currency is BRL, means R\$ 1,547,368.92.
            The only separator present must be ''.'' (dot) to indicate the decimal place. There must be no thousands separator).

            Note: For the purpose of comparing product rates, participating institutions, when they do not charge fees,
            must send the value 0.00 signaling that for that rate there is no charge for the service.
          example: '2000.00'
        currency:
          $ref:  "#/components/schemas/Currency"
        customers:
          $ref: '#/components/schemas/Customer'
    MinimumPrice:
      type: object
      required:
        - value
        - currency
      x-regulatory-required:
        - value
        - currency
      properties:
        value:
          type: string
          pattern: '^(\d{1,9}\.\d{2}){1}$'
          minLength: 4
          maxLength: 12
          x-cds-type: AmountString
          description: |
            Minimum value calculated for the service fee on the customer base in the reference month.

            Note: For the purpose of comparing product rates, participating institutions, when they do not charge fees,
            must send the value 0.00 signaling that for that rate there is no charge for the service.
          example: '1350.00'
        currency:
          $ref:  "#/components/schemas/Currency"
    PriorityServiceMinimumPrice:
      type: object
      required:
        - value
        - currency
      x-regulatory-required:
        - value
        - currency
      properties:
        value:
          type: string
          pattern: '^(\d{1,9}\.\d{2}){1}$'
          minLength: 4
          maxLength: 12
          x-cds-type: AmountString
          description: Minimum value calculated for the service fee on the customer base in the reference month
          example: '1350.00'
        currency:
          $ref:  "#/components/schemas/Currency"
    MaximumPrice:
      type: object
      required:
        - value
        - currency
      x-regulatory-required:
        - value
        - currency
      properties:
        value:
          type: string
          pattern: '^(\d{1,9}\.\d{2}){1}$'
          minLength: 4
          maxLength: 12
          x-cds-type: AmountString
          description: |
            Maximum value calculated for the service fee on the customer base in the reference month.

            Note: For the purpose of comparing product rates, participating institutions, when they do not charge fees,
            must send the value 0.00 signaling that for that rate there is no charge for the service.
          example: '8800.00'
        currency:
          $ref:  "#/components/schemas/Currency"
    PriorityServiceMaximumPrice:
      type: object
      required:
        - value
        - currency
      x-regulatory-required:
        - value
        - currency
      properties:
        value:
          type: string
          pattern: '^(\d{1,9}\.\d{2}){1}$'
          minLength: 4
          maxLength: 12
          x-cds-type: AmountString
          description: Maximum value calculated for the service fee on the customer base in the reference month
          example: '8800.00'
        currency:
          $ref:  "#/components/schemas/Currency"
    Customer:
      type: object
      description: Relevant information for the customer.
      required:
        - rate
      x-regulatory-required:
        - rate
      properties:
        rate:
          type: string
          description: |
            Percentage of customers in each range.
          pattern: '^\d{1}\.\d{6}$'
          example: '0.150000'
          minLength: 8
          maxLength: 8
    MinimumBalance:
      type: object
      required:
        - value
        - currency
      x-regulatory-required:
        - value
        - currency
      properties:
        value:
          type: string
          pattern: '^(\d{1,9}\.\d{2}){1}$'
          minLength: 4
          maxLength: 12
          description: 'Minimum balance required in the Terms and contractual conditions that govern the accounts traded.'
          example: '200.00'
        currency:
          $ref:  "#/components/schemas/Currency"
    Currency:
      type: string
      pattern: '^(\w{3}){1}$'
      minLength: 3
      maxLength: 3
      x-cds-type: CurrencyString
      description: 'Currency referring to the minimum value of the Fee, according to ISO-4217 model'
      example: BRL
    Links:
      type: object
      description: References to other API resources requested
      properties:
        self:
          type: string
          format: url
          minLength: 5
          maxLength: 2000
          description: URL of the currently requested page
          example: 'https://api.banco.com.br/open-banking/opendata-accounts/v1/resource'
        first:
          type: string
          format: url
          minLength: 5
          maxLength: 2000
          description: URL of the first page of records
          example: 'https://api.banco.com.br/open-banking/opendata-accounts/v1/resource'
        prev:
          type: string
          format: url
          minLength: 5
          maxLength: 2000
          description: URL of the previous page of records
          example: 'https://api.banco.com.br/open-banking/opendata-accounts/v1/resource'
        next:
          type: string
          format: url
          minLength: 5
          maxLength: 2000
          description: URL of the next page of records
          example: 'https://api.banco.com.br/open-banking/opendata-accounts/v1/resource'
        last:
          type: string
          format: url
          minLength: 5
          maxLength: 2000
          description: URL of the last page of records
          example: 'https://api.banco.com.br/open-banking/opendata-accounts/v1/resource'
    Meta:
      type: object
      description: Meta information regarding the requested API
      properties:
        totalRecords:
          type: integer
          description: Total records found
          example: 1
        totalPages:
          type: integer
          description: Total pages for the records found
          example: 1
      required:
        - totalRecords
        - totalPages
    ResponseErrorMetaSingle:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          minItems: 1
          maxItems: 13
          items:
            type: object
            required:
              - code
              - title
              - detail
            properties:
              code:
                description: Endpoint specific error code
                type: string
                pattern: '^(?!\s)[\w\W\s]*[^\s]$'
                maxLength: 255
              title:
                description: Human-readable title for this specific error
                type: string
                pattern: '^(?!\s)[\w\W\s]*[^\s]$'
                maxLength: 255
              detail:
                description: Human-readable description for this specific error
                type: string
                pattern: '^(?!\s)[\w\W\s]*[^\s]$'
                maxLength: 2048
        meta:
          type: object
          description: Meta information regarding the requested API.
          required:
            - requestDateTime
          properties:
            requestDateTime:
              description: 'Date and time of consultation, according to RFC-3339 specification, UTC format.'
              type: string
              maxLength: 20
              format: date-time
              example: '2021-05-21T08:30:00Z'
    ResponseError:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          minItems: 1
          maxItems: 13
          items:
            type: object
            required:
              - code
              - title
              - detail
            properties:
              code:
                description: Endpoint specific error code
                type: string
                pattern: '^(?!\s)[\w\W\s]*[^\s]$'
                maxLength: 255
              title:
                description: Human-readable title for this specific error
                type: string
                pattern: '^(?!\s)[\w\W\s]*[^\s]$'
                maxLength: 255
              detail:
                description: Human-readable description for this specific error
                type: string
                pattern: '^(?!\s)[\w\W\s]*[^\s]$'
                maxLength: 2048
        meta:
          type: object
          description: Meta information regarding the requested API.
          required:
            - requestDateTime
          properties:
            requestDateTime:
              description: Date and time of consultation, according to RFC-3339 specification, UTC format.
              type: string
              format: date-time
              minLength: 20
              maxLength: 20
              pattern: '^[2-9]\d{3}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z$'
              example: '2023-10-09T14:10:00Z'
  securitySchemes:
    APIKey1:
      name: API Key
      type: apiKey
      in: query
    APIKey2:
      name: API Key
      type: apiKey
      in: query
  parameters:
    page:
      name: page
      in: query
      description: Page number being requested (the value of the first page is 1).
      schema:
        type: integer
        format: int32
        default: 1
        minimum: 1
        maximum: 2147483647
    pageSize:
      name: page-size
      in: query
      description: Total number of records per page.
      schema:
        type: integer
        format: int32
        default: 25
        minimum: 1
        maximum: 1000
  responses:
    BadRequest:
      description: The request was malformed, omitting mandatory attributes, either in the payload or through URL attributes.
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    NotFound:
      description: The requested resource does not exist or has not been implemented.
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    MethodNotAllowed:
      description: The consumer tried to access the resource with an unsupported method.
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    TooManyRequests:
      description: The operation was refused because too many requests were made within a certain period or the global limit of concurrent requests was reached.
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    InternalServerError:
      description: An error occurred in the API gateway or microservice.
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    GatewayTimeout:
      description: GATEWAY TIMEOUT - The request was not answered within the established timeout.
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    SiteIsOverloaded:
      description: The site is overloaded and the operation was refused because the maximum global TPS limit was reached at this moment.
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseErrorMetaSingle'
    Default:
      description: '\-'
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
